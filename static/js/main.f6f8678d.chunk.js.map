{"version":3,"sources":["components/MainContainer/MainContent/CodeShowcase/SortingCode.js","components/SideDrawer/SideDrawerButton.js","actions/sideDrawerButtonAction.js","components/SideDrawer/SideDrawer.js","components/MainContainer/ToolBar/DrawerToggleButton.js","actions/sideDrawerAction.js","components/MainContainer/ToolBar/Toolbar.js","components/MainContainer/MainContent/CodeShowcase/CodeSpan.js","components/MainContainer/MainContent/CodeShowcase/CodeLine.js","actions/sortingControllerAction.js","components/MainContainer/MainContent/CodeShowcase/CodeShowcase.js","components/MainContainer/MainContent/ViewShowcase/ViewShowcase.js","components/MainContainer/MainContent/MainContent.js","actions/divWidthAction.js","components/MainContainer/SortingController/SortingController.js","components/MainContainer/MainContainer.js","actions/divHeightAction.js","components/App.js","reducers/sideDrawerReducer.js","reducers/sideDrawerButtonReducer.js","reducers/divWidthReducer.js","reducers/divHeightReducer.js","reducers/sortingControllerReducer.js","store.js","index.js"],"names":["SortingCode","bubbleSort","insertionSort","selectionSort","mergeSort","quickSort","SideDrawerButton","props","mouseEnter","e","parent","ReactDom","findDOMNode","setState","state","enter","leave","relX","pageX","getBoundingClientRect","x","relY","pageY","y","mouseLeave","this","setContent","text","setCode","setAlgorithm","className","onMouseEnter","bind","onMouseLeave","onClick","handleClick","style","left","top","href","React","Component","connect","sideDrawerButtonReducer","dispatch","value","type","payload","SideDrawer","buttonList","map","item","key","sideDrawerReducer","DrawerToggleButton","toggleSideDrawer","showSideDrawer","Toolbar","CodeSpan","includes","isNaN","code","color","getColor","CodeLine","indexRef","createRef","codeTextRef","getLength","current","offsetWidth","spans","split","codeClass","index","sortingControllerReducer","highlightLine","ref","setRef","setHighlight","CodeShowcase","getKey","shortid","generate","codeWidth","lineNum","thisRef","childRef","lineNumInView","setMaxLineNum","Math","floor","offsetHeight","console","log","nextProps","unitLineHeight","lniv","scrollIntoView","content","setWidth","codeLines","divHeightReducer","ViewShowcase","MainContent","document","getElementById","setViewWidth","setCodeWidth","vlOnMouseMove","vlOnMouseDown","vlOnMouseUp","event","totalWidth","viewWidth","min","max","window","addEventListener","removeEventListener","id","width","divWidthReducer","onMouseDown","codeLength","viewLength","SortingController","maxLineNum","prev","next","MainContainer","totalHeight","contentHeight","controllerHeight","setContentHeight","setControllerHeight","drawerClickHandler","drawerToggleClickHandler","height","App","innerWidth","innerHeight","updateDimensions","updateWindowDimensions","sideDrawerDivClassName","mainContainerDivClassName","num","action","algorithm","createStore","combineReducers","applyMiddleware","render","store"],"mappings":"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","file":"static/js/main.f6f8678d.chunk.js","sourcesContent":["const SortingCode = {\r\n// ======================================================\r\n    bubbleSort: \r\n`void bubbleSort(int arr[])\r\n{\r\n    int n = arr.length;\r\n    for (int i = 0; i < n - 1; i++)\r\n        for (int j = 0; j < n - i - 1; j++)\r\n            if (arr[j] > arr[j + 1])\r\n            {\r\n                int temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n}` ,\r\n// ======================================================\r\n    insertionSort: \r\n`void insertionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 1; i < n; ++i) { \r\n        int key = arr[i]; \r\n        int j = i - 1; \r\n\r\n        while (j >= 0 && arr[j] > key) { \r\n            arr[j + 1] = arr[j]; \r\n            j = j - 1; \r\n        } \r\n        arr[j + 1] = key; \r\n    } \r\n}`,\r\n// ======================================================\r\n    selectionSort: \r\n`void selectionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 0; i < n-1; i++) \r\n    { \r\n        int min_idx = i; \r\n        for (int j = i+1; j < n; j++) \r\n            if (arr[j] < arr[min_idx]) \r\n                min_idx = j; \r\n        int temp = arr[min_idx]; \r\n        arr[min_idx] = arr[i]; \r\n        arr[i] = temp; \r\n    } \r\n} `,\r\n// ======================================================\r\n    mergeSort:\r\n`void merge(int arr[], int l, int m, int r) \r\n{ \r\n    int p = m - l + 1; \r\n    int q = r - m; \r\n\r\n    int L[] = new int [p]; \r\n    int R[] = new int [q]; \r\n\r\n    for (int i = 0; i < p; ++i) \r\n        L[i] = arr[l + i]; \r\n    for (int j = 0; j < q; ++j) \r\n        R[j] = arr[m + 1+ j]; \r\n\r\n    int i = 0, j = 0; \r\n    int k = l; \r\n    while (i < p && j < q) \r\n    { \r\n        if (L[i] <= R[j]) \r\n        { \r\n            arr[k] = L[i]; \r\n            i++; \r\n        } \r\n        else\r\n        { \r\n            arr[k] = R[j]; \r\n            j++; \r\n        } \r\n        k++; \r\n    } \r\n\r\n    while (i < p) \r\n    { \r\n        arr[k] = L[i]; \r\n        i++; \r\n        k++; \r\n    } \r\n\r\n    while (j < q) \r\n    { \r\n        arr[k] = R[j]; \r\n        j++; \r\n        k++; \r\n    } \r\n} \r\n\r\nvoid sort(int arr[], int l, int r) \r\n{ \r\n    if (l < r) \r\n    { \r\n        int m = (l + r)/2; \r\n        sort(arr, l, m); \r\n        sort(arr , m + 1, r); \r\n        merge(arr, l, m, r); \r\n    } \r\n} `,\r\n// ======================================================\r\n    quickSort:\r\n`int partition(int arr[], int low, int high) \r\n{ \r\n    int pivot = arr[high];  \r\n    int i = (low - 1);\r\n    for (int j = low; j < high; j++) \r\n    {\r\n        if (arr[j] < pivot) \r\n        { \r\n            i++; \r\n            int temp = arr[i]; \r\n            arr[i] = arr[j]; \r\n            arr[j] = temp; \r\n        } \r\n    } \r\n    \r\n    int temp = arr[i+1]; \r\n    arr[i+1] = arr[high]; \r\n    arr[high] = temp; \r\n\r\n    return i + 1;\r\n} \r\n\r\nvoid sort(int arr[], int low, int high) \r\n{ \r\n    if (low < high) \r\n    { \r\n        int pi = partition(arr, low, high); \r\n        sort(arr, low, pi-1); \r\n        sort(arr, pi+1, high); \r\n    } \r\n} `\r\n}\r\n\r\nexport default SortingCode;","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport {connect} from \"react-redux\";\r\nimport { setContent, setAlgorithm, setCode } from \"../../actions/sideDrawerButtonAction\";\r\nimport SortingCode from \"../MainContainer/MainContent/CodeShowcase/SortingCode\";\r\n\r\nimport '../../css/SideDrawerButton.scss';\r\n\r\nclass SideDrawerButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            enter: false,\r\n            leave: false,\r\n        }\r\n    }\r\n\r\n    mouseEnter = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: true,\r\n            leave: false,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    mouseLeave = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: false,\r\n            leave: true,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    handleClick(){\r\n        this.props.setContent(this.props.text);\r\n        switch (this.props.text){\r\n            case \"Bubble Sort\":\r\n                this.props.setCode(SortingCode.bubbleSort);\r\n                this.props.setAlgorithm(\"bubbleSort\");\r\n                break;\r\n            case \"Selection Sort\":\r\n                this.props.setCode(SortingCode.selectionSort);\r\n                this.props.setAlgorithm(\"selectionSort\");\r\n                break;\r\n            case \"Insertion Sort\":\r\n                this.props.setCode(SortingCode.insertionSort);\r\n                this.props.setAlgorithm(\"insertionSort\");\r\n                break;\r\n            case \"Merge Sort\":\r\n                this.props.setCode(SortingCode.mergeSort);\r\n                this.props.setAlgorithm(\"mergeSort\");\r\n                break;\r\n            case \"Quick Sort\":\r\n                this.props.setCode(SortingCode.quickSort);\r\n                this.props.setAlgorithm(\"quickSort\");\r\n                break;\r\n            default:\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"button_su\" onMouseEnter={this.mouseEnter.bind(this)} onMouseLeave={this.mouseLeave.bind(this)} onClick={() => this.handleClick()}>\r\n                <span className={\r\n                            \"su_button_circle \" + \r\n                            (this.state.enter ? 'explode-circle' : '') + \r\n                            (this.state.leave ? 'desplode-circle' : '')}\r\n                      style={{left: this.state.relX, top: this.state.relY}}></span>\r\n                <a href=\"#\" className=\"button_su_inner\">\r\n                    <span className=\"button_text_container\">{this.props.text}</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContent: (value) => {\r\n            dispatch(setContent(value));\r\n        },\r\n        setAlgorithm: (value) => {\r\n            dispatch(setAlgorithm(value));\r\n        },\r\n        setCode: (value) => {\r\n            dispatch(setCode(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawerButton);","export function setContent(value) {\r\n    return {\r\n        type: \"SETCONTENT\",\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setAlgorithm(value) {\r\n    return {\r\n        type: \"SETALGORITHM\",\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function setCode(value) {\r\n    return {\r\n        type: \"SETCODE\",\r\n        payload: value\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../../css/SideDrawer.scss';\r\nimport SideDrawerButton from \"./SideDrawerButton\";\r\n\r\nclass SideDrawer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonList = [\r\n            {text: \"Bubble Sort\"},\r\n            {text: \"Selection Sort\"},\r\n            {text: \"Insertion Sort\"},\r\n            {text: \"Merge Sort\"},\r\n            {text: \"Quick Sort\"},\r\n        ];\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"side-drawer\">\r\n                <div className=\"side-drawer-header\">\r\n                    Visualizer\r\n                </div>\r\n                <div className=\"side-drawer-buttonList\">\r\n                    {this.buttonList.map((item, key) => <div className=\"buttonContainer\" key={key}><SideDrawerButton text={item.text} key={key}/></div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideDrawer);","import React from \"react\";\r\nimport '../../../css/DrawerToggleButton.css';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../../../actions/sideDrawerAction\";\r\n\r\nclass DrawerToggleButton extends React.Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            <button className=\"toggle-button\" onClick={() => this.props.toggleSideDrawer()}>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line1' : 'toggle-button__line1 tlcw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line2' : 'toggle-button__line2 cccw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line3' : 'toggle-button__line3 brcw')}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerToggleButton);","export function toggleSideDrawer() {\r\n    return {\r\n        type: \"TOGGLESIDEDRAWER\"\r\n    };\r\n}","import React from \"react\";\r\nimport '../../../css/Toolbar.css';\r\nimport DrawerToggleButton from \"./DrawerToggleButton\";\r\n\r\nclass Toolbar extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"toolbar\">\r\n                <div className=\"toolbar__navigation\">\r\n                    <DrawerToggleButton/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport \"../../../../css/CodeSpan.css\"\r\n\r\nclass CodeSpan extends React.Component {\r\n\r\n    getColor(text){\r\n        const variableType = [\r\n            \"boolean\", \"int\", \"double\", \"long\", \r\n            \"byte\", \"char\", \"float\", \"short\", \"void\", \"null\"\r\n        ];\r\n        const operator = [\r\n            \"+\", \"-\", \"*\", \"/\", \"=\", \"<\", \">\", \"&\"\r\n        ];\r\n        const accessSpecifier = [\r\n            \"private\", \"public\", \"protected\"\r\n        ];\r\n        const keyWord = [\r\n            \"abstract\", \"assert\", \"break\", \"case\", \"catch\", \"class\", \"continue\",\r\n            \"default\", \"do\", \"default\", \"else\", \"enum\", \"extends\", \"final\", \"finally\",\r\n            \"for\", \"if\", \"implements\", \"import\", \"instanceof\", \"interface\", \"native\", \r\n            \"new\", \"package\", \"return\", \"static\", \"super\", \"switch\", \"synchronized\",\r\n            \"this\", \"throw\", \"throws\", \"transient\", \"try\", \"volatile\", \"while\"\r\n        ];\r\n        const bracket = [\r\n            \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\"\r\n        ];\r\n        const funcName = [\r\n            \"bubbleSort\", \"selectionSort\", \"insertionSort\", \"merge\", \"sort\", \"partition\"\r\n        ];\r\n        const punctuation = [\r\n            \";\", \",\"\r\n        ];\r\n        if(variableType.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(200, 200, 200)\"\r\n            // });\r\n            return \"variableType\";\r\n        }else if(operator.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"tomato\"\r\n            // });\r\n            return \"operator\";\r\n        }else if(accessSpecifier.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"accessSpecifier\";\r\n        }else if(keyWord.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"keyWord\";\r\n        }else if(bracket.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     marginLeft: \"0.2vw\",\r\n            //     marginRight: \"0.2vw\",\r\n            //     color: \"rgb(240, 240, 240)\",\r\n            // });\r\n            return \"bracket\";\r\n        }else if(!isNaN(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(150, 200, 50)\"\r\n            // });\r\n            return \"number\";\r\n        }else if(funcName.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"orange\"\r\n            // });\r\n            return \"funcName\";\r\n        }else if (punctuation.includes(text)){\r\n            return \"else\";\r\n        }else{\r\n            return \"variable\";\r\n        }\r\n    };\r\n\r\n    render(){\r\n        let text = this.props.code;\r\n        let color = this.getColor(text);\r\n        return (\r\n            <span className={\"codeSpan \"+ color}>\r\n                {text}\r\n            </span>\r\n        )\r\n    };\r\n}\r\n\r\nexport default CodeSpan;","import React from \"react\";\r\nimport CodeSpan from \"./CodeSpan\";\r\nimport {connect} from \"react-redux\";\r\nimport \"../../../../css/CodeLine.scss\"\r\n\r\nclass CodeLine extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.indexRef = React.createRef();\r\n        this.codeTextRef = React.createRef();\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.getLength(this.indexRef.current.offsetWidth + this.codeTextRef.current.offsetWidth);\r\n    }\r\n\r\n    render(){\r\n        let spans = this.props.code.split(/([\\W+/])/);\r\n        let codeClass = \"codeLine\";\r\n        if((this.props.index + 1) === this.props.sortingControllerReducer.highlightLine){\r\n            codeClass = \"codeLineHightlight\";\r\n        }\r\n        return (\r\n            <div className={codeClass} ref={this.props.setRef}>\r\n                <div className=\"index\" ref={this.indexRef}>{this.props.index + 1}</div>\r\n                <div className=\"codeText\" ref={this.codeTextRef}>{\r\n                    spans.map((item, key) => { if(item!==\"\"){return<CodeSpan code={item} key={key}/>}else{return null} } )\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sortingControllerReducer: state.sortingControllerReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CodeLine);","export function setHighlight(value) {\r\n    return {\r\n        type: \"SETHIGHLIGHT\",\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setMaxLineNum(value) {\r\n    return {\r\n        type: \"SETMAXLINENUM\",\r\n        payload: value\r\n    }\r\n}","import React, {createRef} from \"react\";\r\nimport CodeLine from \"./CodeLine\";\r\nimport {connect} from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport {setMaxLineNum, setHighlight} from \"../../../../actions/sortingControllerAction\";\r\nimport '../../../../css/CodeShowcase.css';\r\n\r\nclass CodeShowcase extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.codeWidth = 0;\r\n        this.getLength.bind(this);\r\n        this.lineNum = -1 ;\r\n        this.thisRef = createRef();\r\n        this.childRef = [];\r\n        this.lineNumInView = 0;\r\n    }\r\n\r\n    getKey = () => {\r\n        const key = shortid.generate();\r\n        return key;\r\n    };\r\n\r\n    getLength = (value) => {\r\n        if(this.codeWidth < value){\r\n            this.codeWidth = value;\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.setMaxLineNum(this.lineNum);\r\n        this.lineNumInView = Math.floor(this.thisRef.current.offsetHeight / this.childRef[0].current.offsetHeight);\r\n        console.log(this.lineNumInView);\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        this.codeWidth = 0;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let unitLineHeight = 0;\r\n        if(this.childRef[0].current === null){\r\n            unitLineHeight = this.childRef[1].current.offsetHeight;\r\n        }else{\r\n            unitLineHeight = this.childRef[0].current.offsetHeight;\r\n        }\r\n\r\n        let lniv = Math.floor(this.thisRef.current.offsetHeight / unitLineHeight);\r\n        if(lniv !== this.lineNumInView){\r\n            this.lineNumInView = lniv;\r\n        }\r\n\r\n        if(this.childRef[0].current === null){\r\n            if(nextProps.highlightLine - Math.floor(this.lineNumInView / 2) < 1){\r\n                this.childRef[1].current.scrollIntoView();\r\n            }else{\r\n                this.childRef[nextProps.highlightLine - Math.floor(this.lineNumInView / 2)].current.scrollIntoView();\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        if(this.props.sideDrawerButtonReducer.content !== nextProps.sideDrawerButtonReducer.content){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.setWidth(this.codeWidth);\r\n        this.props.setMaxLineNum(this.lineNum);\r\n        this.childRef[1].current.scrollIntoView();\r\n        \r\n        this.lineNum = 0;\r\n        this.props.setHighlight(0);\r\n    }\r\n\r\n\r\n    render(){\r\n        let codeLines = this.props.sideDrawerButtonReducer.code.split(\"\\n\");\r\n        return (\r\n            <div className=\"codeShowcase\" ref={this.thisRef}>\r\n                {codeLines.map  ((item, key) => {this.lineNum ++;\r\n                                                this.childRef[this.lineNum] = createRef();\r\n                                                return <CodeLine \r\n                                                        code={item} \r\n                                                        index={key} \r\n                                                        key={this.getKey()} \r\n                                                        getLength={this.getLength}\r\n                                                        setRef={this.childRef[this.lineNum]}/>\r\n                                                }\r\n                                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divHeightReducer: state.divHeightReducer,\r\n        highlightLine: state.sortingControllerReducer.highlightLine\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHighlight: (value) => {\r\n            dispatch(setHighlight(value));\r\n        },\r\n        setMaxLineNum: (value) => {\r\n            dispatch(setMaxLineNum(value));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeShowcase);","import React from \"react\";\r\nimport '../../../../css/ViewShowcase.css';\r\n\r\nclass ViewShowcase extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"viewShowcase\">\r\n                View\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewShowcase;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CodeShowcase from \"./CodeShowcase/CodeShowcase\";\r\nimport ViewShowcase from \"./ViewShowcase/ViewShowcase\";\r\nimport {setCodeWidth, setViewWidth} from \"../../../actions/divWidthAction\";\r\nimport '../../../css/MainContent.css';\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n        this.setWidth.bind(this);\r\n    }\r\n\r\n    vlOnMouseMove(event){\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let viewWidth = event.pageX - document.getElementById(\"mainContent\").getBoundingClientRect().x;\r\n        let codeWidth = totalWidth - viewWidth;\r\n        let x = Math.min(Math.max((viewWidth * 100)/ totalWidth - 1, 0), 98);\r\n        let y = Math.min(Math.max((codeWidth * 100)/ totalWidth - 1, 0), 98);\r\n\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    setWidth = (codeWidth) => {\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let y = ((codeWidth + 21) * 100)/ totalWidth;\r\n        let x = 98 - y;\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"mainContent\">\r\n                <div id=\"viewDiv\" style={{width: (this.props.divWidthReducer.viewWidth)}}>\r\n                    <ViewShowcase/>\r\n                </div>\r\n                <div id=\"verticalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                <div id=\"codeDiv\" style={{width: (this.props.divWidthReducer.codeWidth)}}>\r\n                    <div className=\"codeShowcaseContainer\">\r\n                        <CodeShowcase setWidth={this.setWidth}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer,\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divWidthReducer: state.divWidthReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setViewWidth: (value) => {\r\n            dispatch(setCodeWidth(value)); \r\n        },\r\n        setCodeWidth: (value) => {\r\n            dispatch(setViewWidth(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);","export function setViewWidth(width) {\r\n    return {\r\n        type: \"SETVIEWWIDTH\",\r\n        viewLength: width\r\n    };\r\n}\r\n\r\nexport function setCodeWidth(width) {\r\n    return {\r\n        type: \"SETCODEWIDTH\",\r\n        codeLength: width\r\n    };\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setHighlight} from \"../../../actions/sortingControllerAction\";\r\n\r\nclass SortingController extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    next(){\r\n        if(this.props.sortingControllerReducer.highlightLine <= this.props.sortingControllerReducer.maxLineNum){\r\n            this.props.setHighlight(++this.props.sortingControllerReducer.highlightLine);\r\n        }\r\n    }\r\n\r\n    prev(){\r\n        if(this.props.sortingControllerReducer.highlightLine > 0){\r\n            this.props.setHighlight(--this.props.sortingControllerReducer.highlightLine);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"sortingController\">\r\n                <button onClick={this.prev.bind(this)}>prev</button>\r\n                <button onClick={this.next.bind(this)}>next</button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sortingControllerReducer: state.sortingControllerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setHighlight: (value) => {\r\n            dispatch(setHighlight(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingController);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setContentHeight, setControllerHeight} from \"../../actions/divHeightAction\";\r\nimport Toolbar from \"./ToolBar/Toolbar\";\r\n// import BackDrop from \"./BackDrop/BackDrop\";\r\nimport '../../css/MainContainer.css';\r\nimport MainContent from \"./MainContent/MainContent\";\r\nimport SortingController from \"./SortingController/SortingController\";\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n    };\r\n\r\n    vlOnMouseMove(event){\r\n        let totalHeight = document.getElementById(\"mainContentDiv\").offsetHeight;\r\n        let contentHeight = event.pageY - document.getElementById(\"codeViewDiv\").getBoundingClientRect().y;\r\n        let controllerHeight = totalHeight - contentHeight;\r\n        let x = Math.min(Math.max((contentHeight * 100)/ totalHeight - 1, 4), 98);\r\n        let y = Math.min(Math.max((controllerHeight * 100)/ totalHeight - 1, 4), 98);\r\n        this.props.setContentHeight(`${x}%`);\r\n        this.props.setControllerHeight(`${y}%`);\r\n    };\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    };\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    };\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div id=\"main-container\">\r\n                <div className=\"toolBarDiv\">\r\n                    <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\r\n                </div>\r\n                <div className=\"titleDiv\">\r\n                    <div>{this.props.sideDrawerButtonReducer.content}</div>\r\n                </div>\r\n                <div id=\"mainContentDiv\">\r\n                    <div id=\"codeViewDiv\" style={{height: this.props.divHeightReducer.contentHeight}}>\r\n                        <MainContent/>\r\n                    </div>\r\n                    <div id=\"horizontalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                    <div id=\"controllerDiv\" style={{height: this.props.divHeightReducer.controllerHeight}}>\r\n                        <SortingController/>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divHeightReducer: state.divHeightReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContentHeight: (value) => {\r\n            dispatch(setContentHeight(value));\r\n        },\r\n        setControllerHeight: (value) => {\r\n            dispatch(setControllerHeight(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","export function setContentHeight(width) {\r\n    return {\r\n        type: \"SETCONTENTHEIGHT\",\r\n        contentHeight: width\r\n    };\r\n}\r\n\r\nexport function setControllerHeight(width) {\r\n    return {\r\n        type: \"SETCONTROLLERHEIGHT\",\r\n        controllerHeight: width\r\n    };\r\n}","import React from \"react\";\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport MainContainer from \"./MainContainer/MainContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../actions/sideDrawerAction\";\r\nimport \"../css/App.css\"\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            width: 100,\r\n            height: 100\r\n        }\r\n    }\r\n\r\n    updateDimensions() {\r\n        this.setState({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener('resize', this.updateDimensions.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    render() {\r\n        let sideDrawerDivClassName;\r\n        let mainContainerDivClassName;\r\n        if(this.props.sideDrawerReducer.showSideDrawer){\r\n            sideDrawerDivClassName = \"sideDrawerDiv\";\r\n            mainContainerDivClassName = \"mainContainerDiv shrink\";\r\n        }else{\r\n            sideDrawerDivClassName = \"sideDrawerDiv hide\";\r\n            mainContainerDivClassName = \"mainContainerDiv\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"appContainer\" style={{width: this.state.width, height: this.state.height}}>\r\n                <div className={sideDrawerDivClassName}><SideDrawer/></div>\r\n                <div className={mainContainerDivClassName}><MainContainer/></div>\r\n            </div>\r\n            // <div className=\"a\">\r\n            //     sdfdsfsa\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const sideDrawerReducer = (state = {\r\n    showSideDrawer: true,\r\n    num: 1\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            state = {\r\n                ...state,\r\n                num: state.num + action.payload\r\n            };\r\n            break;\r\n        case \"TOGGLESIDEDRAWER\":\r\n                state = {\r\n                    ...state,\r\n                    showSideDrawer: !state.showSideDrawer\r\n                };\r\n                break;\r\n        default:\r\n            \r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerReducer;","const sideDrawerButtonReducer = (state = {\r\n    content: \"welcome\",\r\n    algorithm: \"\",\r\n    code: \"\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENT\":\r\n            state = {\r\n                ...state,\r\n                content: action.payload\r\n            };\r\n            break;\r\n        case \"SETALGORITHM\":\r\n            state = {\r\n                ...state,\r\n                algorithm: action.payload\r\n            }\r\n            break;\r\n        case \"SETCODE\":\r\n            state = {\r\n                ...state,\r\n                code: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerButtonReducer;","const divWidthReducer = (state = {\r\n    viewWidth: \"68%\",\r\n    codeWidth: \"30%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETVIEWWIDTH\":\r\n            state = {\r\n                ...state,\r\n                viewWidth: action.viewLength\r\n            };\r\n            break;\r\n        case \"SETCODEWIDTH\":\r\n            state = {\r\n                ...state,\r\n                codeWidth: action.codeLength\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default divWidthReducer;","const divHeightReducer = (state = {\r\n    contentHeight: \"70%\",\r\n    controllerHeight: \"28%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENTHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                contentHeight: action.contentHeight\r\n            };\r\n            break;\r\n        case \"SETCONTROLLERHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                controllerHeight: action.controllerHeight\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default divHeightReducer;","const sortingControllerReducer = (state = {\r\n    highlightLine: 0,\r\n    maxLineNum: 0\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETHIGHLIGHT\":\r\n            state = {\r\n                ...state,\r\n                highlightLine: action.payload\r\n            };\r\n            break;\r\n        case \"SETMAXLINENUM\":\r\n            state = {\r\n                ...state,\r\n                maxLineNum: action.payload\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sortingControllerReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport sideDrawerReducer from \"./reducers/sideDrawerReducer\";\r\nimport sideDrawerButtonReducer from \"./reducers/sideDrawerButtonReducer\";\r\nimport divWidthReducer from \"./reducers/divWidthReducer\";\r\nimport divHeightReducer from \"./reducers/divHeightReducer\";\r\nimport sortingControllerReducer from \"./reducers/sortingControllerReducer\";\r\n\r\nexport default createStore(\r\n    combineReducers({sideDrawerReducer, sideDrawerButtonReducer, divWidthReducer, divHeightReducer, sortingControllerReducer}), \r\n    {}, \r\n    applyMiddleware()\r\n);","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport store from \"./store\";\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    window.document.getElementById(\"app\")\r\n);"],"sourceRoot":""}