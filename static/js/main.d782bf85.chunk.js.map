{"version":3,"sources":["components/MainContainer/MainContent/CodeShowcase/SortingCode.js","components/SideDrawer/SideDrawerButton.js","actions/sideDrawerButtonAction.js","components/SideDrawer/SideDrawer.js","components/MainContainer/ToolBar/DrawerToggleButton.js","actions/sideDrawerAction.js","components/MainContainer/ToolBar/Toolbar.js","components/MainContainer/MainContent/CodeShowcase/CodeSpan.js","components/MainContainer/MainContent/CodeShowcase/CodeLine.js","actions/sortingControllerAction.js","components/MainContainer/MainContent/CodeShowcase/CodeShowcase.js","components/MainContainer/MainContent/ViewShowcase/SortableUnit.js","components/MainContainer/MainContent/ViewShowcase/ViewShowcase.js","components/MainContainer/MainContent/MainContent.js","actions/divWidthAction.js","components/MainContainer/SortingController/SCButton.js","components/MainContainer/SortingController/ArrayInput.js","components/MainContainer/SortingController/SortingController.js","components/MainContainer/MainContainer.js","actions/divHeightAction.js","components/App.js","reducers/sideDrawerReducer.js","reducers/sideDrawerButtonReducer.js","reducers/divWidthReducer.js","reducers/divHeightReducer.js","reducers/sortingControllerReducer.js","store.js","index.js"],"names":["SortingCode","bubbleSort","insertionSort","selectionSort","mergeSort","quickSort","SideDrawerButton","props","mouseEnter","e","parent","ReactDom","findDOMNode","setState","state","enter","leave","relX","pageX","getBoundingClientRect","x","relY","pageY","y","mouseLeave","this","setContent","text","setCode","setAlgorithm","className","onMouseEnter","bind","onMouseLeave","onClick","handleClick","style","left","top","React","Component","connect","sideDrawerButtonReducer","dispatch","value","type","payload","SideDrawer","buttonList","src","alt","map","item","key","sideDrawerReducer","DrawerToggleButton","toggleSideDrawer","showSideDrawer","Toolbar","CodeSpan","includes","isNaN","code","color","getColor","CodeLine","indexRef","createRef","codeTextRef","getLength","current","offsetWidth","parseInt","window","getComputedStyle","getPropertyValue","spans","split","codeClass","index","sortingControllerReducer","highlightLine","ref","setRef","setHighlight","CodeShowcase","getKey","shortid","generate","codeWidth","lineNum","thisRef","childRef","lineNumInView","setMaxLineNum","Math","floor","offsetHeight","console","log","nextProps","unitLineHeight","lniv","scrollIntoView","content","setWidth","codeLines","divHeightReducer","SortableUnit","width","unitWidth","marginRight","marginLeft","height","unitHeight","ViewShowcase","unitContainerRef","theArray","max","i","length","min","MainContent","document","getElementById","setViewWidth","setCodeWidth","vlOnMouseMove","vlOnMouseDown","vlOnMouseUp","event","totalWidth","viewWidth","addEventListener","removeEventListener","id","divWidthReducer","onMouseDown","codeLength","viewLength","SCButton","align","disabled","ArrayInput","handleMouseLeave","isHovering","timer","clearTimeout","handleMouseMove","inputRef","promptDivLeft","promptDivTop","focusInput","input","checkInputIsArray","tempArr","Number","setTimeout","setupHoverDiv","clientX","clientY","handleMouseEnter","onFocus","handleFocus","onBlur","handleBlur","placeholder","placeHolder","SortingController","exchangeButtonRef","arrayLength","round","random","newArray","join","setTheArray","maxLineNum","array","clearTheArray","slice","submitArray","generateArray","exchange","MainContainer","totalHeight","contentHeight","controllerHeight","setContentHeight","setControllerHeight","drawerClickHandler","drawerToggleClickHandler","App","innerWidth","innerHeight","updateDimensions","updateWindowDimensions","sideDrawerDivClassName","mainContainerDivClassName","num","action","algorithm","createStore","combineReducers","applyMiddleware","render","store"],"mappings":"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","file":"static/js/main.d782bf85.chunk.js","sourcesContent":["const SortingCode = {\r\n// ======================================================\r\n    bubbleSort: \r\n`void bubbleSort(int arr[])\r\n{\r\n    int n = arr.length;\r\n    for (int i = 0; i < n - 1; i++)\r\n        for (int j = 0; j < n - i - 1; j++)\r\n            if (arr[j] > arr[j + 1])\r\n            {\r\n                int temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n}` ,\r\n// ======================================================\r\n    insertionSort: \r\n`void insertionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 1; i < n; ++i) { \r\n        int key = arr[i]; \r\n        int j = i - 1; \r\n\r\n        while (j >= 0 && arr[j] > key) { \r\n            arr[j + 1] = arr[j]; \r\n            j = j - 1; \r\n        } \r\n        arr[j + 1] = key; \r\n    } \r\n}`,\r\n// ======================================================\r\n    selectionSort: \r\n`void selectionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 0; i < n-1; i++) \r\n    { \r\n        int min_idx = i; \r\n        for (int j = i+1; j < n; j++) \r\n            if (arr[j] < arr[min_idx]) \r\n                min_idx = j; \r\n        int temp = arr[min_idx]; \r\n        arr[min_idx] = arr[i]; \r\n        arr[i] = temp; \r\n    } \r\n} `,\r\n// ======================================================\r\n    mergeSort:\r\n`void merge(int arr[], int l, int m, int r) \r\n{ \r\n    int p = m - l + 1; \r\n    int q = r - m; \r\n\r\n    int L[] = new int [p]; \r\n    int R[] = new int [q]; \r\n\r\n    for (int i = 0; i < p; ++i) \r\n        L[i] = arr[l + i]; \r\n    for (int j = 0; j < q; ++j) \r\n        R[j] = arr[m + 1+ j]; \r\n\r\n    int i = 0, j = 0; \r\n    int k = l; \r\n    while (i < p && j < q) \r\n    { \r\n        if (L[i] <= R[j]) \r\n        { \r\n            arr[k] = L[i]; \r\n            i++; \r\n        } \r\n        else\r\n        { \r\n            arr[k] = R[j]; \r\n            j++; \r\n        } \r\n        k++; \r\n    } \r\n\r\n    while (i < p) \r\n    { \r\n        arr[k] = L[i]; \r\n        i++; \r\n        k++; \r\n    } \r\n\r\n    while (j < q) \r\n    { \r\n        arr[k] = R[j]; \r\n        j++; \r\n        k++; \r\n    } \r\n} \r\n\r\nvoid sort(int arr[], int l, int r) \r\n{ \r\n    if (l < r) \r\n    { \r\n        int m = (l + r)/2; \r\n        sort(arr, l, m); \r\n        sort(arr , m + 1, r); \r\n        merge(arr, l, m, r); \r\n    } \r\n} `,\r\n// ======================================================\r\n    quickSort:\r\n`int partition(int arr[], int low, int high) \r\n{ \r\n    int pivot = arr[high];  \r\n    int i = (low - 1);\r\n    for (int j = low; j < high; j++) \r\n    {\r\n        if (arr[j] < pivot) \r\n        { \r\n            i++; \r\n            int temp = arr[i]; \r\n            arr[i] = arr[j]; \r\n            arr[j] = temp; \r\n        } \r\n    } \r\n    \r\n    int temp = arr[i+1]; \r\n    arr[i+1] = arr[high]; \r\n    arr[high] = temp; \r\n\r\n    return i + 1;\r\n} \r\n\r\nvoid sort(int arr[], int low, int high) \r\n{ \r\n    if (low < high) \r\n    { \r\n        int pi = partition(arr, low, high); \r\n        sort(arr, low, pi-1); \r\n        sort(arr, pi+1, high); \r\n    } \r\n} `\r\n}\r\n\r\nexport default SortingCode;","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport {connect} from \"react-redux\";\r\nimport { setContent, setAlgorithm, setCode } from \"../../actions/sideDrawerButtonAction\";\r\nimport SortingCode from \"../MainContainer/MainContent/CodeShowcase/SortingCode\";\r\n\r\nimport '../../css/SideDrawerButton.scss';\r\n\r\nclass SideDrawerButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            enter: false,\r\n            leave: false,\r\n        }\r\n    }\r\n\r\n    mouseEnter = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: true,\r\n            leave: false,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    mouseLeave = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: false,\r\n            leave: true,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    handleClick(){\r\n        this.props.setContent(this.props.text);\r\n        switch (this.props.text){\r\n            case \"Bubble Sort\":\r\n                this.props.setCode(SortingCode.bubbleSort);\r\n                this.props.setAlgorithm(\"bubbleSort\");\r\n                break;\r\n            case \"Selection Sort\":\r\n                this.props.setCode(SortingCode.selectionSort);\r\n                this.props.setAlgorithm(\"selectionSort\");\r\n                break;\r\n            case \"Insertion Sort\":\r\n                this.props.setCode(SortingCode.insertionSort);\r\n                this.props.setAlgorithm(\"insertionSort\");\r\n                break;\r\n            case \"Merge Sort\":\r\n                this.props.setCode(SortingCode.mergeSort);\r\n                this.props.setAlgorithm(\"mergeSort\");\r\n                break;\r\n            case \"Quick Sort\":\r\n                this.props.setCode(SortingCode.quickSort);\r\n                this.props.setAlgorithm(\"quickSort\");\r\n                break;\r\n            default:\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"buttonDiv\" onMouseEnter={this.mouseEnter.bind(this)} onMouseLeave={this.mouseLeave.bind(this)} onClick={() => this.handleClick()}>\r\n                <span className={\r\n                            \"buttonCircle \" + \r\n                            (this.state.enter ? 'explode-circle' : '') + \r\n                            (this.state.leave ? 'desplode-circle' : '')}\r\n                      style={{left: this.state.relX, top: this.state.relY}}></span>\r\n                <button>\r\n                    <span className=\"buttonText\">{this.props.text}</span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContent: (value) => {\r\n            dispatch(setContent(value));\r\n        },\r\n        setAlgorithm: (value) => {\r\n            dispatch(setAlgorithm(value));\r\n        },\r\n        setCode: (value) => {\r\n            dispatch(setCode(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawerButton);","export function setContent(value) {\r\n    return {\r\n        type: \"SETCONTENT\",\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setAlgorithm(value) {\r\n    return {\r\n        type: \"SETALGORITHM\",\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function setCode(value) {\r\n    return {\r\n        type: \"SETCODE\",\r\n        payload: value\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../../css/SideDrawer.scss';\r\nimport SideDrawerButton from \"./SideDrawerButton\";\r\n\r\nclass SideDrawer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonList = [\r\n            {text: \"Bubble Sort\"},\r\n            {text: \"Selection Sort\"},\r\n            {text: \"Insertion Sort\"},\r\n            {text: \"Merge Sort\"},\r\n            {text: \"Quick Sort\"},\r\n        ];\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"side-drawer\">\r\n                <div className=\"side-drawer-header\">\r\n                    Visualizer\r\n                </div>\r\n                <div className=\"buttonListTitle\">\r\n                    <div className=\"titleContent\">\r\n                        <img src=\"https://img.icons8.com/ultraviolet/480/000000/generic-sorting-2.png\"\r\n                        alt=\"\"/>\r\n                        <span>Sorting</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-drawer-buttonList\">\r\n                    {this.buttonList.map((item, key) => <div className=\"buttonContainer\" key={key}><SideDrawerButton text={item.text} key={key}/></div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideDrawer);","import React from \"react\";\r\nimport '../../../css/DrawerToggleButton.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../../../actions/sideDrawerAction\";\r\n\r\nclass DrawerToggleButton extends React.Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            <button className=\"toggle-button\" onClick={() => this.props.toggleSideDrawer()}>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line1' : 'toggle-button__line1 tlcw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line2' : 'toggle-button__line2 cccw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line3' : 'toggle-button__line3 brcw')}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerToggleButton);","export function toggleSideDrawer() {\r\n    return {\r\n        type: \"TOGGLESIDEDRAWER\"\r\n    };\r\n}","import React from \"react\";\r\nimport '../../../css/Toolbar.scss';\r\nimport DrawerToggleButton from \"./DrawerToggleButton\";\r\n\r\nclass Toolbar extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"toolbar\">\r\n                <div className=\"toolbar__navigation\">\r\n                    <DrawerToggleButton/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport \"../../../../css/CodeSpan.css\"\r\n\r\nclass CodeSpan extends React.Component {\r\n\r\n    getColor(text){\r\n        const variableType = [\r\n            \"boolean\", \"int\", \"double\", \"long\", \r\n            \"byte\", \"char\", \"float\", \"short\", \"void\", \"null\"\r\n        ];\r\n        const operator = [\r\n            \"+\", \"-\", \"*\", \"/\", \"=\", \"<\", \">\", \"&\"\r\n        ];\r\n        const accessSpecifier = [\r\n            \"private\", \"public\", \"protected\"\r\n        ];\r\n        const keyWord = [\r\n            \"abstract\", \"assert\", \"break\", \"case\", \"catch\", \"class\", \"continue\",\r\n            \"default\", \"do\", \"default\", \"else\", \"enum\", \"extends\", \"final\", \"finally\",\r\n            \"for\", \"if\", \"implements\", \"import\", \"instanceof\", \"interface\", \"native\", \r\n            \"new\", \"package\", \"return\", \"static\", \"super\", \"switch\", \"synchronized\",\r\n            \"this\", \"throw\", \"throws\", \"transient\", \"try\", \"volatile\", \"while\"\r\n        ];\r\n        const bracket = [\r\n            \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\"\r\n        ];\r\n        const funcName = [\r\n            \"bubbleSort\", \"selectionSort\", \"insertionSort\", \"merge\", \"sort\", \"partition\"\r\n        ];\r\n        const punctuation = [\r\n            \";\", \",\"\r\n        ];\r\n        if(variableType.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(200, 200, 200)\"\r\n            // });\r\n            return \"variableType\";\r\n        }else if(operator.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"tomato\"\r\n            // });\r\n            return \"operator\";\r\n        }else if(accessSpecifier.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"accessSpecifier\";\r\n        }else if(keyWord.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"keyWord\";\r\n        }else if(bracket.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     marginLeft: \"0.2vw\",\r\n            //     marginRight: \"0.2vw\",\r\n            //     color: \"rgb(240, 240, 240)\",\r\n            // });\r\n            return \"bracket\";\r\n        }else if(!isNaN(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(150, 200, 50)\"\r\n            // });\r\n            return \"number\";\r\n        }else if(funcName.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"orange\"\r\n            // });\r\n            return \"funcName\";\r\n        }else if (punctuation.includes(text)){\r\n            return \"else\";\r\n        }else{\r\n            return \"variable\";\r\n        }\r\n    };\r\n\r\n    render(){\r\n        let text = this.props.code;\r\n        let color = this.getColor(text);\r\n        return (\r\n            <span className={\"codeSpan \"+ color}>\r\n                {text}\r\n            </span>\r\n        )\r\n    };\r\n}\r\n\r\nexport default CodeSpan;","import React from \"react\";\r\nimport CodeSpan from \"./CodeSpan\";\r\nimport {connect} from \"react-redux\";\r\nimport \"../../../../css/CodeLine.scss\"\r\n\r\nclass CodeLine extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.indexRef = React.createRef();\r\n        this.codeTextRef = React.createRef();\r\n    }\r\n    \r\n    componentDidMount(){\r\n\r\n        // console.log(this.indexRef.current.offsetWidth + this.codeTextRef.current.offsetWidth +\r\n        //     parseInt(window.getComputedStyle(this.codeTextRef.current).getPropertyValue('padding-left'), 10) +\r\n        //     parseInt(window.getComputedStyle(this.indexRef.current).getPropertyValue('padding-right'), 10));\r\n\r\n        this.props.getLength(this.indexRef.current.offsetWidth + this.codeTextRef.current.offsetWidth +\r\n            parseInt(window.getComputedStyle(this.codeTextRef.current).getPropertyValue('padding-left'), 10) +\r\n            parseInt(window.getComputedStyle(this.indexRef.current).getPropertyValue('padding-right'), 10));\r\n    }\r\n\r\n    render(){\r\n        let spans = this.props.code.split(/([\\W+/])/);\r\n        let codeClass = \"codeLine\";\r\n        if((this.props.index + 1) === this.props.sortingControllerReducer.highlightLine){\r\n            codeClass = \"codeLineHighlight\";\r\n        }\r\n        return (\r\n            <div className={codeClass} ref={this.props.setRef}>\r\n                <div className=\"index\" ref={this.indexRef}>{this.props.index + 1}</div>\r\n                <div className=\"codeText\" ref={this.codeTextRef}>{\r\n                    spans.map((item, key) => { if(item!==\"\"){return<CodeSpan code={item} key={key}/>}else{return null} } )\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sortingControllerReducer: state.sortingControllerReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CodeLine);","export function setHighlight(value) {\r\n    return {\r\n        type: \"SETHIGHLIGHT\",\r\n        payload: value\r\n    }\r\n}\r\nexport function setMaxLineNum(value) {\r\n    return {\r\n        type: \"SETMAXLINENUM\",\r\n        payload: value\r\n    }\r\n}\r\nexport function setTheArray(value) {\r\n    return {\r\n        type: \"SETTHEARRAY\",\r\n        payload: value\r\n    }\r\n}\r\nexport function clearTheArray() {\r\n    return {\r\n        type: \"CLEARTHEARRAY\"\r\n    }\r\n}","import React, {createRef} from \"react\";\r\nimport CodeLine from \"./CodeLine\";\r\nimport {connect} from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport {setMaxLineNum, setHighlight} from \"../../../../actions/sortingControllerAction\";\r\nimport '../../../../css/CodeShowcase.css';\r\n\r\nclass CodeShowcase extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.codeWidth = 0;\r\n        this.getLength.bind(this);\r\n        this.lineNum = -1 ;\r\n        this.thisRef = createRef();\r\n        this.childRef = [];\r\n        this.lineNumInView = 0;\r\n    }\r\n\r\n    getKey = () => {\r\n        const key = shortid.generate();\r\n        return key;\r\n    };\r\n\r\n    getLength = (value) => {\r\n        if(this.codeWidth < value){\r\n            this.codeWidth = value;\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.setMaxLineNum(this.lineNum);\r\n        this.lineNumInView = Math.floor(this.thisRef.current.offsetHeight / this.childRef[0].current.offsetHeight);\r\n        console.log(this.lineNumInView);\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        this.codeWidth = 0;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let unitLineHeight = 0;\r\n        if(this.childRef[0].current === null){\r\n            unitLineHeight = this.childRef[1].current.offsetHeight;\r\n        }else{\r\n            unitLineHeight = this.childRef[0].current.offsetHeight;\r\n        }\r\n\r\n        let lniv = Math.floor(this.thisRef.current.offsetHeight / unitLineHeight);\r\n        if(lniv !== this.lineNumInView){\r\n            this.lineNumInView = lniv;\r\n        }\r\n\r\n        if(this.childRef[0].current === null){\r\n            if(nextProps.highlightLine - Math.floor(this.lineNumInView / 2) < 1){\r\n                this.childRef[1].current.scrollIntoView();\r\n            }else{\r\n                this.childRef[nextProps.highlightLine - Math.floor(this.lineNumInView / 2)].current.scrollIntoView();\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        if(this.props.sideDrawerButtonReducer.content !== nextProps.sideDrawerButtonReducer.content){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.setWidth(this.codeWidth);\r\n        this.props.setMaxLineNum(this.lineNum);\r\n        this.childRef[1].current.scrollIntoView();\r\n        \r\n        this.lineNum = 0;\r\n        this.props.setHighlight(0);\r\n    }\r\n\r\n\r\n    render(){\r\n        let codeLines = this.props.sideDrawerButtonReducer.code.split(\"\\n\");\r\n        return (\r\n            <div className=\"codeShowcase\" ref={this.thisRef}>\r\n                {codeLines.map  ((item, key) => {this.lineNum ++;\r\n                                                this.childRef[this.lineNum] = createRef();\r\n                                                return <CodeLine \r\n                                                        code={item} \r\n                                                        index={key} \r\n                                                        key={this.getKey()} \r\n                                                        getLength={this.getLength}\r\n                                                        setRef={this.childRef[this.lineNum]}/>\r\n                                                }\r\n                                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divHeightReducer: state.divHeightReducer,\r\n        highlightLine: state.sortingControllerReducer.highlightLine\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setHighlight: (value) => {\r\n            dispatch(setHighlight(value));\r\n        },\r\n        setMaxLineNum: (value) => {\r\n            dispatch(setMaxLineNum(value));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeShowcase);","import React from \"react\";\r\nimport \"../../../../css/SortableUnit.scss\";\r\n\r\nclass SortableUnit extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"sortableUnit\" style={{\r\n                    width:`${this.props.unitWidth}px`,\r\n                    marginRight:`${this.props.unitWidth * 0.1}px`,\r\n                    marginLeft:`${this.props.unitWidth * 0.1}px`,\r\n                }}>\r\n                    {console.log(this.props.index)}\r\n                <div className=\"rectIndex\">{this.props.index}</div>\r\n                <div className=\"rect\" style={{height: `${this.props.unitHeight * this.props.item}px`}}></div>\r\n                <div className=\"numLabel\">{this.props.item}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortableUnit;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport SortableUnit from \"./SortableUnit\";\r\nimport '../../../../css/ViewShowcase.scss';\r\n\r\n\r\nclass ViewShowcase extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.unitContainerRef = React.createRef();\r\n        this.unitHeight = 0;\r\n        this.unitWidth = 0;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        if(isNaN(nextProps.theArray[0])){\r\n            return false;\r\n        }\r\n        let max = parseInt(nextProps.theArray[0]);\r\n        for(let i = 0; i < nextProps.theArray.length; i ++){\r\n            if(max < parseInt(nextProps.theArray[i])){\r\n                max = parseInt(nextProps.theArray[i]);\r\n            }\r\n        }\r\n        this.unitHeight = this.unitContainerRef.current.offsetHeight * 0.85 / max;\r\n        this.unitWidth = Math.min(this.unitContainerRef.current.offsetWidth / nextProps.theArray.length, 50);\r\n        return true;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"viewShowcase\">\r\n                <div className=\"unitContainer\" ref={this.unitContainerRef}>\r\n                    {\r\n                    this.props.theArray.map((item, key) => {\r\n                        return <SortableUnit key={key} index={key} item={item} unitHeight={this.unitHeight} unitWidth={this.unitWidth}/>\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        theArray: state.sortingControllerReducer.theArray\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ViewShowcase);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CodeShowcase from \"./CodeShowcase/CodeShowcase\";\r\nimport ViewShowcase from \"./ViewShowcase/ViewShowcase\";\r\nimport {setCodeWidth, setViewWidth} from \"../../../actions/divWidthAction\";\r\nimport '../../../css/MainContent.scss';\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n        this.setWidth.bind(this);\r\n    }\r\n\r\n    vlOnMouseMove(event){\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let viewWidth = event.pageX - document.getElementById(\"mainContent\").getBoundingClientRect().x;\r\n        let codeWidth = totalWidth - viewWidth;\r\n        let x = Math.min(Math.max((viewWidth * 100)/ totalWidth, 0), 100);\r\n        let y = Math.min(Math.max((codeWidth * 100)/ totalWidth, 0), 100);\r\n\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    setWidth = (codeWidth) => {\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let y = ((codeWidth + 21) * 100)/ totalWidth;\r\n        let x = 100 - y;\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"mainContent\">\r\n                <div id=\"viewDiv\" style={{width: (this.props.divWidthReducer.viewWidth)}}>\r\n                    <ViewShowcase/>\r\n                </div>\r\n                <div id=\"verticalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                <div id=\"codeDiv\" style={{width: (this.props.divWidthReducer.codeWidth)}}>\r\n                    <div className=\"codeShowcaseContainer\">\r\n                        <CodeShowcase setWidth={this.setWidth}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer,\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divWidthReducer: state.divWidthReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setViewWidth: (value) => {\r\n            dispatch(setCodeWidth(value)); \r\n        },\r\n        setCodeWidth: (value) => {\r\n            dispatch(setViewWidth(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);","export function setViewWidth(width) {\r\n    return {\r\n        type: \"SETVIEWWIDTH\",\r\n        viewLength: width\r\n    };\r\n}\r\n\r\nexport function setCodeWidth(width) {\r\n    return {\r\n        type: \"SETCODEWIDTH\",\r\n        codeLength: width\r\n    };\r\n}","import React from \"react\";\r\nimport \"../../../css/SCButton.scss\";\r\n\r\nclass SCButton extends React.Component {\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"scbuttonDiv\" align=\"center\">\r\n                <button className=\"scbutton\" onClick={this.props.onClick} disabled={this.props.disabled}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SCButton;","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport \"../../../css/ArrayInput.scss\";\r\n\r\nclass ArrayInput extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.inputRef = React.createRef();\r\n        this.state = {\r\n            isHovering: false,\r\n            promptDivLeft: 0,\r\n            promptDivTop: 0,\r\n            focusInput: false\r\n        }\r\n    }\r\n\r\n    handleClick(){\r\n        let input = document.getElementById(\"ti\").value;\r\n        if(this.checkInputIsArray(input)){\r\n            this.props.handleClick(input);\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    checkInputIsArray(input){\r\n        if(input === \"\"){\r\n            return true;\r\n        }\r\n        let tempArr = input.split(\",\");\r\n        for(let i = 0; i < tempArr.length; i ++){\r\n            if(tempArr[i] === \"\"){\r\n                return false;\r\n            }\r\n            if(isNaN(tempArr[i])){\r\n                return false;\r\n            }\r\n            if(Number(tempArr[i]) < 0 || Number(tempArr[i]) > 50){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleMouseEnter(){\r\n        document.getElementById(\"textInput\").addEventListener(\"mousemove\", this.handleMouseMove.bind(this));\r\n        this.timer = window.setTimeout(() => {\r\n            this.setupHoverDiv();\r\n        },1500);\r\n    }\r\n\r\n    handleMouseMove(event){\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            isHovering: false,\r\n            promptDivLeft: event.clientX - parent.getBoundingClientRect().x + 10,\r\n            promptDivTop: event.clientY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    setupHoverDiv(){\r\n        this.setState({\r\n            ...this.state,\r\n            isHovering: true\r\n        })\r\n    }\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            isHovering: false\r\n        })\r\n        if(this.timer){\r\n            window.clearTimeout(this.timer);\r\n        }\r\n        document.getElementById(\"textInput\").removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    }\r\n\r\n    handleFocus(){\r\n        this.setState({\r\n            ...this.state,\r\n            isHovering: false,\r\n            focusInput: true\r\n        })\r\n        document.getElementById(\"textInput\").removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    }\r\n\r\n    handleBlur(){\r\n        this.setState({\r\n            ...this.state,\r\n            focusInput: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"textInput\" onMouseEnter={this.handleMouseEnter.bind(this)} onMouseLeave={this.handleMouseLeave} \r\n            onFocus={this.handleFocus.bind(this)} onBlur={this.handleBlur.bind(this)}>\r\n                <input id=\"ti\" ref={this.inputRef} placeholder={this.state.focusInput?\"\":this.props.placeHolder}></input>\r\n                <button id=\"tiButton\" onClick={this.handleClick.bind(this)}>Enter</button>\r\n                {\r\n                    this.state.isHovering &&\r\n                    <div className=\"promptDiv\" style={{top:this.state.promptDivTop, left:this.state.promptDivLeft}}>\r\n                        <p>Please input array in this format:\r\n                            \"num1,num2,num3\"</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ArrayInput;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setHighlight, setTheArray, clearTheArray} from \"../../../actions/sortingControllerAction\";\r\nimport SCButton from \"./SCButton\";\r\nimport ArrayInput from \"./ArrayInput\";\r\nimport \"../../../css/SortingController.scss\"\r\n\r\nclass SortingController extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.placeHolder = \"\";\r\n        this.exchangeButtonRef = React.createRef();\r\n    }\r\n\r\n    generateArray(){\r\n        let arrayLength = Math.max(3, Math.min(20, Math.round(Math.random() * 20)));\r\n        \r\n        let newArray = [];\r\n        for(let i = 0; i < arrayLength; i ++){\r\n            newArray[i] = Math.max(1, Math.min(50, Math.round(Math.random() * 50)));\r\n        }\r\n        console.log(newArray.join());\r\n        this.props.setTheArray(newArray);\r\n    }\r\n\r\n    next(){\r\n        if(this.props.sortingControllerReducer.highlightLine <= this.props.sortingControllerReducer.maxLineNum){\r\n            this.props.setHighlight(++this.props.sortingControllerReducer.highlightLine);\r\n        }\r\n    }\r\n\r\n    prev(){\r\n        if(this.props.sortingControllerReducer.highlightLine > 0){\r\n            this.props.setHighlight(--this.props.sortingControllerReducer.highlightLine);\r\n        }\r\n    }\r\n\r\n    submitArray(array){\r\n        let tempArr = array.split(',');\r\n        if(tempArr[0] === \"\"){\r\n            this.props.clearTheArray();\r\n        }else{\r\n            this.props.setTheArray(tempArr);\r\n        }\r\n    }\r\n\r\n    exchange(){\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.sortingControllerReducer.theArray.length === 0){\r\n            this.placeHolder = \"Input array here...\";\r\n        }else{\r\n            if(this.props.sortingControllerReducer.theArray.length > 8){\r\n                this.placeHolder = this.props.sortingControllerReducer.theArray.slice(0, 7).join() + \"...\";\r\n            }else{\r\n                this.placeHolder = this.props.sortingControllerReducer.theArray.join();\r\n            }\r\n        }\r\n        \r\n        // this.placeHolder=(this.props.sortingControllerReducer.theArray===[]?\"Input array here...\":this.props.sortingControllerReducer.theArray.join());\r\n        // console.log(this.placeHolder);\r\n        return (\r\n            <div id=\"sortingController\">\r\n                <ArrayInput handleClick={this.submitArray.bind(this)} placeHolder={this.placeHolder}/>\r\n                <div className=\"buttonList\">\r\n                    {/* <button onClick={this.prev.bind(this)}>prev</button>\r\n                    <button onClick={this.next.bind(this)}>next</button> */}\r\n                    <SCButton text=\"Generate Array\"\r\n                        onClick={this.generateArray.bind(this)}\r\n                        disabled={false}/>\r\n                    <SCButton text=\"Exchange\"\r\n                        onClick={this.exchange.bind(this)}\r\n                        disabled={this.props.sortingControllerReducer.theArray.length === 0}/>\r\n                </div>\r\n             </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sortingControllerReducer: state.sortingControllerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setHighlight: (value) => {\r\n            dispatch(setHighlight(value));\r\n        },\r\n        setTheArray: (value) => {\r\n            dispatch(setTheArray(value));\r\n        },\r\n        clearTheArray: () => {\r\n            dispatch(clearTheArray());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingController);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setContentHeight, setControllerHeight} from \"../../actions/divHeightAction\";\r\nimport Toolbar from \"./ToolBar/Toolbar\";\r\n// import BackDrop from \"./BackDrop/BackDrop\";\r\nimport '../../css/MainContainer.scss';\r\nimport MainContent from \"./MainContent/MainContent\";\r\nimport SortingController from \"./SortingController/SortingController\";\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n    };\r\n\r\n    vlOnMouseMove(event){\r\n        let totalHeight = document.getElementById(\"mainContentDiv\").offsetHeight;\r\n        let contentHeight = event.pageY - document.getElementById(\"codeViewDiv\").getBoundingClientRect().y;\r\n        let controllerHeight = totalHeight - contentHeight;\r\n        let x = Math.min(Math.max((contentHeight * 100) / totalHeight, 6), 100);\r\n        let y = Math.min(Math.max((controllerHeight * 100) / totalHeight, 6), 100);\r\n        this.props.setContentHeight(`${x}%`);\r\n        this.props.setControllerHeight(`${y}%`);\r\n    };\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    };\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"main-container\">\r\n                <div className=\"toolBarDiv\">\r\n                    <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\r\n                </div>\r\n                <div className=\"titleDiv\">\r\n                    <div>{this.props.sideDrawerButtonReducer.content}</div>\r\n                </div>\r\n                <div id=\"mainContentDiv\">\r\n                    <div id=\"codeViewDiv\" style={{height: this.props.divHeightReducer.contentHeight}}>\r\n                        <MainContent/>\r\n                    </div>\r\n                    <div id=\"horizontalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                    <div id=\"controllerDiv\" style={{height: this.props.divHeightReducer.controllerHeight}}>\r\n                        <SortingController/>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divHeightReducer: state.divHeightReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContentHeight: (value) => {\r\n            dispatch(setContentHeight(value));\r\n        },\r\n        setControllerHeight: (value) => {\r\n            dispatch(setControllerHeight(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","export function setContentHeight(width) {\r\n    return {\r\n        type: \"SETCONTENTHEIGHT\",\r\n        contentHeight: width\r\n    };\r\n}\r\n\r\nexport function setControllerHeight(width) {\r\n    return {\r\n        type: \"SETCONTROLLERHEIGHT\",\r\n        controllerHeight: width\r\n    };\r\n}","import React from \"react\";\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport MainContainer from \"./MainContainer/MainContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../actions/sideDrawerAction\";\r\nimport \"../css/App.css\"\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            width: 100,\r\n            height: 100\r\n        }\r\n    }\r\n\r\n    updateDimensions() {\r\n        this.setState({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener('resize', this.updateDimensions.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    render() {\r\n        let sideDrawerDivClassName;\r\n        let mainContainerDivClassName;\r\n        if(this.props.sideDrawerReducer.showSideDrawer){\r\n            sideDrawerDivClassName = \"sideDrawerDiv\";\r\n            mainContainerDivClassName = \"mainContainerDiv shrink\";\r\n        }else{\r\n            sideDrawerDivClassName = \"sideDrawerDiv hide\";\r\n            mainContainerDivClassName = \"mainContainerDiv\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"appContainer\" style={{width: this.state.width, height: this.state.height}}>\r\n                <div className={sideDrawerDivClassName}><SideDrawer/></div>\r\n                <div className={mainContainerDivClassName}><MainContainer/></div>\r\n            </div>\r\n            // <div className=\"a\">\r\n            //     sdfdsfsa\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const sideDrawerReducer = (state = {\r\n    showSideDrawer: true,\r\n    num: 1\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            state = {\r\n                ...state,\r\n                num: state.num + action.payload\r\n            };\r\n            break;\r\n        case \"TOGGLESIDEDRAWER\":\r\n                state = {\r\n                    ...state,\r\n                    showSideDrawer: !state.showSideDrawer\r\n                };\r\n                break;\r\n        default:\r\n            \r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerReducer;","const sideDrawerButtonReducer = (state = {\r\n    content: \"welcome\",\r\n    algorithm: \"\",\r\n    code: \"\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENT\":\r\n            state = {\r\n                ...state,\r\n                content: action.payload\r\n            };\r\n            break;\r\n        case \"SETALGORITHM\":\r\n            state = {\r\n                ...state,\r\n                algorithm: action.payload\r\n            }\r\n            break;\r\n        case \"SETCODE\":\r\n            state = {\r\n                ...state,\r\n                code: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerButtonReducer;","const divWidthReducer = (state = {\r\n    viewWidth: \"70%\",\r\n    codeWidth: \"30%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETVIEWWIDTH\":\r\n            state = {\r\n                ...state,\r\n                viewWidth: action.viewLength\r\n            };\r\n            break;\r\n        case \"SETCODEWIDTH\":\r\n            state = {\r\n                ...state,\r\n                codeWidth: action.codeLength\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default divWidthReducer;","const divHeightReducer = (state = {\r\n    contentHeight: \"70%\",\r\n    controllerHeight: \"28%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENTHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                contentHeight: action.contentHeight\r\n            };\r\n            break;\r\n        case \"SETCONTROLLERHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                controllerHeight: action.controllerHeight\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default divHeightReducer;","const sortingControllerReducer = (state = {\r\n    highlightLine: 0,\r\n    maxLineNum: 0,\r\n    theArray: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETHIGHLIGHT\":\r\n            state = {\r\n                ...state,\r\n                highlightLine: action.payload\r\n            };\r\n            break;\r\n        case \"SETMAXLINENUM\":\r\n            state = {\r\n                ...state,\r\n                maxLineNum: action.payload\r\n            };\r\n            break;\r\n        case \"SETTHEARRAY\":\r\n            state = {\r\n                ...state,\r\n                theArray: action.payload\r\n            }\r\n            break;\r\n        case \"CLEARTHEARRAY\":\r\n            state = {\r\n                ...state,\r\n                theArray: []\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sortingControllerReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport sideDrawerReducer from \"./reducers/sideDrawerReducer\";\r\nimport sideDrawerButtonReducer from \"./reducers/sideDrawerButtonReducer\";\r\nimport divWidthReducer from \"./reducers/divWidthReducer\";\r\nimport divHeightReducer from \"./reducers/divHeightReducer\";\r\nimport sortingControllerReducer from \"./reducers/sortingControllerReducer\";\r\n\r\nexport default createStore(\r\n    combineReducers({sideDrawerReducer, sideDrawerButtonReducer, divWidthReducer, divHeightReducer, sortingControllerReducer}), \r\n    {}, \r\n    applyMiddleware()\r\n);","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport store from \"./store\";\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    window.document.getElementById(\"app\")\r\n);"],"sourceRoot":""}