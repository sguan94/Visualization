{"version":3,"sources":["components/SideDrawer/SideDrawerButton.js","components/SideDrawer/SideDrawer.js","components/MainContainer/ToolBar/Toolbar.js","components/MainContainer/MainContainer.js","components/App.js","index.js"],"names":["SideDrawerButton","className","href","this","props","text","React","Component","SideDrawer","buttonList","sideDraweClassName","map","item","key","showSideDrawerReducer","showSideDraw","connect","state","showSideDrawReducer","Toolbar","MainContainer","mainContainerClassName","drawerClickHandler","drawerToggleClickHandler","style","marginTop","dispatch","toggleSideDrawer","type","App","console","log","onClick","initalState","num","store","createStore","combineReducers","action","payload","applyMiddleware","logger","render","window","document","getElementById"],"mappings":"kYAaeA,G,6LARP,OACI,yBAAKC,UAAU,qBACX,uBAAGC,KAAK,KAAKC,KAAKC,MAAMC,W,GAJTC,IAAMC,YCG/BC,E,YAEF,WAAYJ,GAAQ,IAAD,8BACf,4CAAMA,KACDK,WAAa,CACd,CAACJ,KAAM,cACP,CAACA,KAAM,cAJI,E,sEAUf,IAIIK,EAJED,EAAaN,KAAKM,WAAWE,IAC/B,SAACC,EAAMC,GAAP,OAAe,kBAAC,EAAD,CAAkBR,KAAMO,EAAKP,KAAMQ,IAAKA,MAU3D,OAHIH,EAHAP,KAAKC,MAAMU,sBAAsBC,aAGZ,cAFA,mBAMrB,yBAAKd,UAAWS,GACXD,O,GAzBQH,IAAMC,WAqChBS,cANS,SAACC,GACrB,MAAM,CACFH,sBAAuBG,EAAMC,sBAItBF,CAAyBR,GCpBzBW,G,6LAjBP,OACI,4BAAQlB,UAAU,WACd,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBAAgB,uBAAGC,KAAK,KAAR,aAC/B,yBAAKD,UAAU,6BACX,4BACI,4BAAI,uBAAGC,KAAK,KAAR,YACJ,4BAAI,uBAAGA,KAAK,KAAR,iB,GATVI,IAAMC,YCCtBa,G,uLAIE,IAAIC,EAOJ,OAHIA,EAHAlB,KAAKC,MAAMU,sBAAsBC,aAGR,iBAFA,wBAMzB,yBAAKd,UAAWoB,GACZ,kBAAC,EAAD,CAASC,mBAAoBnB,KAAKoB,2BAElC,0BAAMC,MAAO,CAACC,UAAW,SACrB,4D,GAhBQnB,IAAMC,YAuCnBS,cAhBS,SAACC,GACrB,MAAM,CACFH,sBAAuBG,EAAMC,sBAIV,SAACQ,GACxB,MAAM,CACFC,iBAAkB,WACdD,EAAS,CACLE,KAAM,wBAMPZ,CAA6CI,GCtCtDS,G,uLAEQ,IAAD,OAEL,OADAC,QAAQC,IAAI5B,KAAKC,OAEb,yBAAKH,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,4BAAQ+B,QAAS,kBAAM,EAAK5B,MAAMuB,2B,GARhCrB,IAAMC,YA8BTS,cAhBS,SAACC,GACrB,MAAM,CACFH,sBAAuBG,EAAMC,sBAIV,SAACQ,GACxB,MAAM,CACFC,iBAAkB,WACdD,EAAS,CACLE,KAAM,wBAMPZ,CAA6Ca,G,mjBC7B5D,IAAMI,EAAc,CAChBlB,cAAc,EACdmB,IAAK,GAqBHC,EAAQC,YACVC,YAAgB,CAACnB,oBAnBO,WAAkC,IAAjCD,EAAgC,uDAAxBgB,EAAaK,EAAW,uCACzD,OAAQA,EAAOV,MACX,IAAK,MACDX,EAAK,KACEA,EADF,CAEDiB,IAAKjB,EAAMiB,IAAMI,EAAOC,UAE5B,MACJ,IAAK,mBACGtB,EAAK,KACEA,EADF,CAEDF,cAAeE,EAAMF,eAIrC,OAAOE,KAKP,GACAuB,YAAgBC,MAGpBN,EAAMT,SAAS,CACXE,KAAM,MACNW,QAAS,IAGbJ,EAAMT,SAAS,CACXE,KAAM,MACNW,QAAS,IAGbG,iBACI,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEJQ,OAAOC,SAASC,eAAe,U","file":"static/js/main.80ea0234.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './SideDrawerButton.css';\r\n\r\nclass SideDrawerButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"sidedrawer-button\">\r\n                <a href=\"/\">{this.props.text}</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideDrawerButton;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './SideDrawer.css'\r\nimport SideDrawerButton from \"./SideDrawerButton\";\r\n\r\nclass SideDrawer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonList = [\r\n            {text: \"LinkedList\"},\r\n            {text: \"ArrayList\"},\r\n        ];\r\n    };\r\n\r\n    render(){\r\n\r\n        const buttonList = this.buttonList.map(\r\n            (item, key) => <SideDrawerButton text={item.text} key={key}/>\r\n        )\r\n\r\n        let sideDraweClassName;\r\n        if(!this.props.showSideDrawerReducer.showSideDraw){\r\n            sideDraweClassName = \"side-drawer open\";\r\n        }else{\r\n            sideDraweClassName = \"side-drawer\";\r\n        }\r\n\r\n        return (\r\n            <div className={sideDraweClassName}>\r\n                {buttonList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        showSideDrawerReducer: state.showSideDrawReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideDrawer);","import React from \"react\";\r\nimport './Toolbar.css';\r\nimport DrawerToggleButton from \"./DrawerToggleButton\";\r\n\r\nclass Toolbar extends React.Component{\r\n    render(){\r\n        return (\r\n            <header className=\"toolbar\">\r\n                <nav className=\"toolbar__navigation\">\r\n                    <div className=\"toolbar__logo\"><a href=\"/\">THE LOGO</a></div>\r\n                    <div className=\"toolbar__navigation-items\">\r\n                        <ul>\r\n                            <li><a href=\"/\">Product</a></li>\r\n                            <li><a href=\"/\">User</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Toolbar from \"./ToolBar/Toolbar\";\r\nimport './MainContainer.css';\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    render(){\r\n\r\n        let mainContainerClassName;\r\n        if(!this.props.showSideDrawerReducer.showSideDraw){\r\n            mainContainerClassName = \"main-container shrink\";\r\n        }else{\r\n            mainContainerClassName = \"main-container\";\r\n        }\r\n\r\n        return (\r\n            <div className={mainContainerClassName}>\r\n                <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\r\n                {/* {backDrop} */}\r\n                <main style={{marginTop: '64px'}}>\r\n                    <p>dfhgfdfsgfnwesgdhesgdgd</p>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        showSideDrawerReducer: state.showSideDrawReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch({\r\n                type: \"TOGGLESIDEDRAWER\"\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","import React from \"react\";\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport MainContainer from \"./MainContainer/MainContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div className=\"appContainer\">\r\n                <SideDrawer/>\r\n                <MainContainer/>\r\n                <button onClick={() => this.props.toggleSideDrawer()}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        showSideDrawerReducer: state.showSideDrawReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch({\r\n                type: \"TOGGLESIDEDRAWER\"\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\n\r\nconst initalState = {\r\n    showSideDraw: false,\r\n    num: 1\r\n}\r\n\r\nconst showSideDrawReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            state = {\r\n                ...state,\r\n                num: state.num + action.payload\r\n            };\r\n            break;\r\n        case \"TOGGLESIDEDRAWER\":\r\n                state = {\r\n                    ...state,\r\n                    showSideDraw: !state.showSideDraw\r\n                };\r\n                break;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(\r\n    combineReducers({showSideDrawReducer}), \r\n    {}, \r\n    applyMiddleware(logger)\r\n);\r\n\r\nstore.dispatch({\r\n    type: \"ADD\",\r\n    payload: 1\r\n});\r\n\r\nstore.dispatch({\r\n    type: \"ADD\",\r\n    payload: 1\r\n});\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    window.document.getElementById(\"app\")\r\n);"],"sourceRoot":""}