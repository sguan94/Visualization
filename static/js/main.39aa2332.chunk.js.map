{"version":3,"sources":["components/MainContainer/MainContent/CodeShowcase/SortingCode.js","components/SideDrawer/SideDrawerButton.js","actions/sideDrawerButtonAction.js","components/SideDrawer/SideDrawer.js","components/MainContainer/ToolBar/DrawerToggleButton.js","actions/sideDrawerAction.js","components/MainContainer/ToolBar/Toolbar.js","components/MainContainer/MainContent/CodeShowcase/CodeSpan.js","components/MainContainer/MainContent/CodeShowcase/CodeLine.js","components/MainContainer/MainContent/CodeShowcase/CodeShowcase.js","components/MainContainer/MainContent/ViewShowcase/ViewShowcase.js","components/MainContainer/MainContent/MainContent.js","actions/divWidthAction.js","components/MainContainer/SortingController/SortingController.js","components/MainContainer/MainContainer.js","actions/divHeightAction.js","components/App.js","reducers/sideDrawerReducer.js","reducers/sideDrawerButtonReducer.js","reducers/divWidthReducer.js","reducers/divHeightReducer.js","store.js","index.js"],"names":["SortingCode","bubbleSort","insertionSort","selectionSort","mergeSort","quickSort","SideDrawerButton","props","mouseEnter","e","parent","ReactDom","findDOMNode","setState","state","enter","leave","relX","pageX","getBoundingClientRect","x","relY","pageY","y","mouseLeave","this","setContent","text","setCode","setAlgorithm","className","onMouseEnter","bind","onMouseLeave","onClick","handleClick","style","left","top","href","React","Component","connect","sideDrawerButtonReducer","dispatch","value","type","payload","SideDrawer","buttonList","map","item","key","sideDrawerReducer","DrawerToggleButton","toggleSideDrawer","showSideDrawer","Toolbar","CodeSpan","includes","isNaN","code","color","getColor","CodeLine","indexRef","createRef","codeTextRef","getLength","current","offsetWidth","spans","split","ref","index","CodeShowcase","getKey","shortid","generate","codeWidth","setWidth","codeLines","ViewShowcase","MainContent","document","getElementById","setViewWidth","setCodeWidth","vlOnMouseMove","vlOnMouseDown","vlOnMouseUp","event","totalWidth","viewWidth","Math","min","max","window","addEventListener","removeEventListener","id","width","divWidthReducer","onMouseDown","codeLength","viewLength","SortingController","MainContainer","totalHeight","offsetHeight","contentHeight","controllerHeight","setContentHeight","setControllerHeight","drawerClickHandler","drawerToggleClickHandler","content","height","divHeightReducer","App","innerWidth","innerHeight","updateDimensions","updateWindowDimensions","sideDrawerDivClassName","mainContainerDivClassName","num","action","algorithm","createStore","combineReducers","applyMiddleware","render","store"],"mappings":"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","file":"static/js/main.39aa2332.chunk.js","sourcesContent":["const SortingCode = {\r\n// ======================================================\r\n    bubbleSort: \r\n`void bubbleSort(int arr[])\r\n{\r\n    int n = arr.length;\r\n    for (int i = 0; i < n - 1; i++)\r\n        for (int j = 0; j < n - i - 1; j++)\r\n            if (arr[j] > arr[j + 1])\r\n            {\r\n                int temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n}` ,\r\n// ======================================================\r\n    insertionSort: \r\n`void insertionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 1; i < n; ++i) { \r\n        int key = arr[i]; \r\n        int j = i - 1; \r\n\r\n        while (j >= 0 && arr[j] > key) { \r\n            arr[j + 1] = arr[j]; \r\n            j = j - 1; \r\n        } \r\n        arr[j + 1] = key; \r\n    } \r\n}`,\r\n// ======================================================\r\n    selectionSort: \r\n`void selectionSort(int arr[]) \r\n{ \r\n    int n = arr.length; \r\n    for (int i = 0; i < n-1; i++) \r\n    { \r\n        int min_idx = i; \r\n        for (int j = i+1; j < n; j++) \r\n            if (arr[j] < arr[min_idx]) \r\n                min_idx = j; \r\n        int temp = arr[min_idx]; \r\n        arr[min_idx] = arr[i]; \r\n        arr[i] = temp; \r\n    } \r\n} `,\r\n// ======================================================\r\n    mergeSort:\r\n`void merge(int arr[], int l, int m, int r) \r\n{ \r\n    int p = m - l + 1; \r\n    int q = r - m; \r\n\r\n    int L[] = new int [p]; \r\n    int R[] = new int [q]; \r\n\r\n    for (int i = 0; i < p; ++i) \r\n        L[i] = arr[l + i]; \r\n    for (int j = 0; j < q; ++j) \r\n        R[j] = arr[m + 1+ j]; \r\n\r\n    int i = 0, j = 0; \r\n    int k = l; \r\n    while (i < p && j < q) \r\n    { \r\n        if (L[i] <= R[j]) \r\n        { \r\n            arr[k] = L[i]; \r\n            i++; \r\n        } \r\n        else\r\n        { \r\n            arr[k] = R[j]; \r\n            j++; \r\n        } \r\n        k++; \r\n    } \r\n\r\n    while (i < p) \r\n    { \r\n        arr[k] = L[i]; \r\n        i++; \r\n        k++; \r\n    } \r\n\r\n    while (j < q) \r\n    { \r\n        arr[k] = R[j]; \r\n        j++; \r\n        k++; \r\n    } \r\n} \r\n\r\nvoid sort(int arr[], int l, int r) \r\n{ \r\n    if (l < r) \r\n    { \r\n        int m = (l + r)/2; \r\n        sort(arr, l, m); \r\n        sort(arr , m + 1, r); \r\n        merge(arr, l, m, r); \r\n    } \r\n} `,\r\n// ======================================================\r\n    quickSort:\r\n`int partition(int arr[], int low, int high) \r\n{ \r\n    int pivot = arr[high];  \r\n    int i = (low - 1);\r\n    for (int j = low; j < high; j++) \r\n    {\r\n        if (arr[j] < pivot) \r\n        { \r\n            i++; \r\n            int temp = arr[i]; \r\n            arr[i] = arr[j]; \r\n            arr[j] = temp; \r\n        } \r\n    } \r\n    \r\n    int temp = arr[i+1]; \r\n    arr[i+1] = arr[high]; \r\n    arr[high] = temp; \r\n\r\n    return i + 1;\r\n} \r\n\r\nvoid sort(int arr[], int low, int high) \r\n{ \r\n    if (low < high) \r\n    { \r\n        int pi = partition(arr, low, high); \r\n        sort(arr, low, pi-1); \r\n        sort(arr, pi+1, high); \r\n    } \r\n} `\r\n}\r\n\r\nexport default SortingCode;","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport {connect} from \"react-redux\";\r\nimport { setContent, setAlgorithm, setCode } from \"../../actions/sideDrawerButtonAction\";\r\nimport SortingCode from \"../MainContainer/MainContent/CodeShowcase/SortingCode\";\r\n\r\nimport '../../css/SideDrawerButton.scss';\r\n\r\nclass SideDrawerButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            enter: false,\r\n            leave: false,\r\n        }\r\n    }\r\n\r\n    mouseEnter = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: true,\r\n            leave: false,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    mouseLeave = (e) => {\r\n        var parent = ReactDom.findDOMNode(this);\r\n        this.setState({\r\n            ...this.state,\r\n            enter: false,\r\n            leave: true,\r\n            relX: e.pageX - parent.getBoundingClientRect().x,\r\n            relY: e.pageY - parent.getBoundingClientRect().y\r\n        })\r\n    }\r\n\r\n    handleClick(){\r\n        this.props.setContent(this.props.text);\r\n        switch (this.props.text){\r\n            case \"Bubble Sort\":\r\n                this.props.setCode(SortingCode.bubbleSort);\r\n                this.props.setAlgorithm(\"bubbleSort\");\r\n                break;\r\n            case \"Selection Sort\":\r\n                this.props.setCode(SortingCode.selectionSort);\r\n                this.props.setAlgorithm(\"selectionSort\");\r\n                break;\r\n            case \"Insertion Sort\":\r\n                this.props.setCode(SortingCode.insertionSort);\r\n                this.props.setAlgorithm(\"insertionSort\");\r\n                break;\r\n            case \"Merge Sort\":\r\n                this.props.setCode(SortingCode.mergeSort);\r\n                this.props.setAlgorithm(\"mergeSort\");\r\n                break;\r\n            case \"Quick Sort\":\r\n                this.props.setCode(SortingCode.quickSort);\r\n                this.props.setAlgorithm(\"quickSort\");\r\n                break;\r\n            default:\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"button_su\" onMouseEnter={this.mouseEnter.bind(this)} onMouseLeave={this.mouseLeave.bind(this)} onClick={() => this.handleClick()}>\r\n                <span className={\r\n                            \"su_button_circle \" + \r\n                            (this.state.enter ? 'explode-circle' : '') + \r\n                            (this.state.leave ? 'desplode-circle' : '')}\r\n                      style={{left: this.state.relX, top: this.state.relY}}></span>\r\n                <a href=\"#\" className=\"button_su_inner\">\r\n                    <span className=\"button_text_container\">{this.props.text}</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContent: (value) => {\r\n            dispatch(setContent(value));\r\n        },\r\n        setAlgorithm: (value) => {\r\n            dispatch(setAlgorithm(value));\r\n        },\r\n        setCode: (value) => {\r\n            dispatch(setCode(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawerButton);","export function setContent(value) {\r\n    return {\r\n        type: \"SETCONTENT\",\r\n        payload: value\r\n    };\r\n}\r\n\r\nexport function setAlgorithm(value) {\r\n    return {\r\n        type: \"SETALGORITHM\",\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function setCode(value) {\r\n    return {\r\n        type: \"SETCODE\",\r\n        payload: value\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport '../../css/SideDrawer.scss';\r\nimport SideDrawerButton from \"./SideDrawerButton\";\r\n\r\nclass SideDrawer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonList = [\r\n            {text: \"Bubble Sort\"},\r\n            {text: \"Selection Sort\"},\r\n            {text: \"Insertion Sort\"},\r\n            {text: \"Merge Sort\"},\r\n            {text: \"Quick Sort\"},\r\n        ];\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"side-drawer\">\r\n                <div className=\"side-drawer-header\">\r\n                    Visualizer\r\n                </div>\r\n                <div className=\"side-drawer-buttonList\">\r\n                    {this.buttonList.map((item, key) => <div className=\"buttonContainer\" key={key}><SideDrawerButton text={item.text} key={key}/></div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideDrawer);","import React from \"react\";\r\nimport '../../../css/DrawerToggleButton.css';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../../../actions/sideDrawerAction\";\r\n\r\nclass DrawerToggleButton extends React.Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            <button className=\"toggle-button\" onClick={() => this.props.toggleSideDrawer()}>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line1' : 'toggle-button__line1 tlcw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line2' : 'toggle-button__line2 cccw')}/>\r\n                <div className={(!this.props.sideDrawerReducer.showSideDrawer ? 'toggle-button__line3' : 'toggle-button__line3 brcw')}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerToggleButton);","export function toggleSideDrawer() {\r\n    return {\r\n        type: \"TOGGLESIDEDRAWER\"\r\n    };\r\n}","import React from \"react\";\r\nimport '../../../css/Toolbar.css';\r\nimport DrawerToggleButton from \"./DrawerToggleButton\";\r\n\r\nclass Toolbar extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"toolbar\">\r\n                <div className=\"toolbar__navigation\">\r\n                    <DrawerToggleButton/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport \"../../../../css/CodeSpan.css\"\r\n\r\nclass CodeSpan extends React.Component {\r\n\r\n    getColor(text){\r\n        const variableType = [\r\n            \"boolean\", \"int\", \"double\", \"long\", \r\n            \"byte\", \"char\", \"float\", \"short\", \"void\", \"null\"\r\n        ];\r\n        const operator = [\r\n            \"+\", \"-\", \"*\", \"/\", \"=\", \"<\", \">\", \"&\"\r\n        ];\r\n        const accessSpecifier = [\r\n            \"private\", \"public\", \"protected\"\r\n        ];\r\n        const keyWord = [\r\n            \"abstract\", \"assert\", \"break\", \"case\", \"catch\", \"class\", \"continue\",\r\n            \"default\", \"do\", \"default\", \"else\", \"enum\", \"extends\", \"final\", \"finally\",\r\n            \"for\", \"if\", \"implements\", \"import\", \"instanceof\", \"interface\", \"native\", \r\n            \"new\", \"package\", \"return\", \"static\", \"super\", \"switch\", \"synchronized\",\r\n            \"this\", \"throw\", \"throws\", \"transient\", \"try\", \"volatile\", \"while\"\r\n        ];\r\n        const bracket = [\r\n            \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\"\r\n        ];\r\n        const funcName = [\r\n            \"bubbleSort\", \"selectionSort\", \"insertionSort\", \"merge\", \"sort\", \"partition\"\r\n        ];\r\n        const punctuation = [\r\n            \";\", \",\"\r\n        ];\r\n        if(variableType.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(200, 200, 200)\"\r\n            // });\r\n            return \"variableType\";\r\n        }else if(operator.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"tomato\"\r\n            // });\r\n            return \"operator\";\r\n        }else if(accessSpecifier.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"accessSpecifier\";\r\n        }else if(keyWord.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"yellow\"\r\n            // });\r\n            return \"keyWord\";\r\n        }else if(bracket.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     marginLeft: \"0.2vw\",\r\n            //     marginRight: \"0.2vw\",\r\n            //     color: \"rgb(240, 240, 240)\",\r\n            // });\r\n            return \"bracket\";\r\n        }else if(!isNaN(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"rgb(150, 200, 50)\"\r\n            // });\r\n            return \"number\";\r\n        }else if(funcName.includes(text)){\r\n            // this.setState({\r\n            //     ...this.state,\r\n            //     color: \"orange\"\r\n            // });\r\n            return \"funcName\";\r\n        }else if (punctuation.includes(text)){\r\n            return \"else\";\r\n        }else{\r\n            return \"variable\";\r\n        }\r\n    };\r\n\r\n    render(){\r\n        let text = this.props.code;\r\n        let color = this.getColor(text);\r\n        return (\r\n            <span className={\"codeSpan \"+ color}>\r\n                {text}\r\n            </span>\r\n        )\r\n    };\r\n}\r\n\r\nexport default CodeSpan;","import React from \"react\";\r\nimport CodeSpan from \"./CodeSpan\";\r\nimport \"../../../../css/CodeLine.scss\"\r\n\r\nclass CodeLine extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.indexRef = React.createRef();\r\n        this.codeTextRef = React.createRef();\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.getLength(this.indexRef.current.offsetWidth + this.codeTextRef.current.offsetWidth);\r\n    }\r\n\r\n    render(){\r\n        let spans = this.props.code.split(/([\\W+/])/);\r\n        return (\r\n            <div className=\"codeLine\">\r\n                <div className=\"index\" ref={this.indexRef}>{this.props.index + 1}</div>\r\n                <div className=\"codeText\" ref={this.codeTextRef}>{\r\n                    spans.map((item, key) => { if(item!==\"\"){return<CodeSpan code={item} key={key}/>}else{return null} } )\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CodeLine;","import React from \"react\";\r\nimport CodeLine from \"./CodeLine\";\r\nimport {connect} from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport '../../../../css/CodeShowcase.css';\r\n\r\nclass CodeShowcase extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.codeWidth = 0;\r\n        this.getLength.bind(this);\r\n    }\r\n\r\n    getKey = () => {\r\n        const key = shortid.generate();\r\n        return key;\r\n    };\r\n\r\n    getLength = (value) => {\r\n        if(this.codeWidth < value){\r\n            this.codeWidth = value;\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        this.codeWidth = 0;\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.setWidth(this.codeWidth);\r\n    }\r\n\r\n    render(){\r\n        let codeLines = this.props.sideDrawerButtonReducer.code.split(\"\\n\");\r\n        return (\r\n            <div className=\"codeShowcase\">\r\n                {codeLines.map((item, key) => <CodeLine code={item} index={key} key={this.getKey()} getLength={this.getLength}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CodeShowcase);","import React from \"react\";\r\nimport '../../../../css/ViewShowcase.css';\r\n\r\nclass ViewShowcase extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"viewShowcase\">\r\n                View\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewShowcase;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CodeShowcase from \"./CodeShowcase/CodeShowcase\";\r\nimport ViewShowcase from \"./ViewShowcase/ViewShowcase\";\r\nimport {setCodeWidth, setViewWidth} from \"../../../actions/divWidthAction\";\r\nimport '../../../css/MainContent.css';\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n        this.setWidth.bind(this);\r\n    }\r\n\r\n    vlOnMouseMove(event){\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let viewWidth = event.pageX - document.getElementById(\"mainContent\").getBoundingClientRect().x;\r\n        let codeWidth = totalWidth - viewWidth;\r\n        let x = Math.min(Math.max((viewWidth * 100)/ totalWidth - 1, 0), 98);\r\n        let y = Math.min(Math.max((codeWidth * 100)/ totalWidth - 1, 0), 98);\r\n\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    setWidth = (codeWidth) => {\r\n        let totalWidth = document.getElementById(\"mainContent\").offsetWidth;\r\n        let y = ((codeWidth + 40) * 100)/ totalWidth;\r\n        let x = 98 - y;\r\n        this.props.setViewWidth(`${y}%`);\r\n        this.props.setCodeWidth(`${x}%`);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"mainContent\">\r\n                <div id=\"viewDiv\" style={{width: (this.props.divWidthReducer.viewWidth)}}>\r\n                    <ViewShowcase/>\r\n                </div>\r\n                <div id=\"verticalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                <div id=\"codeDiv\" style={{width: (this.props.divWidthReducer.codeWidth)}}>\r\n                    <div className=\"codeShowcaseContainer\">\r\n                        <CodeShowcase setWidth={this.setWidth}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer,\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divWidthReducer: state.divWidthReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setViewWidth: (value) => {\r\n            dispatch(setCodeWidth(value)); \r\n        },\r\n        setCodeWidth: (value) => {\r\n            dispatch(setViewWidth(value));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);","export function setViewWidth(width) {\r\n    return {\r\n        type: \"SETVIEWWIDTH\",\r\n        viewLength: width\r\n    };\r\n}\r\n\r\nexport function setCodeWidth(width) {\r\n    return {\r\n        type: \"SETCODEWIDTH\",\r\n        codeLength: width\r\n    };\r\n}","import React from \"react\";\r\n\r\nclass SortingController extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"sortingController\">\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingController;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setContentHeight, setControllerHeight} from \"../../actions/divHeightAction\";\r\nimport Toolbar from \"./ToolBar/Toolbar\";\r\n// import BackDrop from \"./BackDrop/BackDrop\";\r\nimport '../../css/MainContainer.css';\r\nimport MainContent from \"./MainContent/MainContent\";\r\nimport SortingController from \"./SortingController/SortingController\";\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.vlOnMouseMove = this.vlOnMouseMove.bind(this);\r\n        this.vlOnMouseDown = this.vlOnMouseDown.bind(this);\r\n        this.vlOnMouseUp = this.vlOnMouseUp.bind(this);\r\n    }\r\n\r\n    vlOnMouseMove(event){\r\n        let totalHeight = document.getElementById(\"mainContentDiv\").offsetHeight;\r\n        let contentHeight = event.pageY - document.getElementById(\"codeViewDiv\").getBoundingClientRect().y;\r\n        let controllerHeight = totalHeight - contentHeight;\r\n        let x = Math.min(Math.max((contentHeight * 100)/ totalHeight - 1, 4), 98);\r\n        let y = Math.min(Math.max((controllerHeight * 100)/ totalHeight - 1, 4), 98);\r\n        this.props.setContentHeight(`${x}%`);\r\n        this.props.setControllerHeight(`${y}%`);\r\n    }\r\n\r\n    vlOnMouseDown(){\r\n        window.addEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.addEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    vlOnMouseUp(){\r\n        window.removeEventListener(\"mousemove\", this.vlOnMouseMove, false);\r\n        window.removeEventListener(\"mouseup\", this.vlOnMouseUp, false);\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div id=\"main-container\">\r\n                <div className=\"toolBarDiv\">\r\n                    <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\r\n                </div>\r\n                <div className=\"titleDiv\">\r\n                    <div>{this.props.sideDrawerButtonReducer.content}</div>\r\n                </div>\r\n                <div id=\"mainContentDiv\">\r\n                    <div id=\"codeViewDiv\" style={{height: this.props.divHeightReducer.contentHeight}}>\r\n                        <MainContent/>\r\n                    </div>\r\n                    <div id=\"horizontalLine\" onMouseDown={this.vlOnMouseDown}></div>\r\n                    <div id=\"controllerDiv\" style={{height: this.props.divHeightReducer.controllerHeight}}>\r\n                        <SortingController/>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerButtonReducer: state.sideDrawerButtonReducer,\r\n        divHeightReducer: state.divHeightReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        setContentHeight: (value) => {\r\n            dispatch(setContentHeight(value));\r\n        },\r\n        setControllerHeight: (value) => {\r\n            dispatch(setControllerHeight(value));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","export function setContentHeight(width) {\r\n    return {\r\n        type: \"SETCONTENTHEIGHT\",\r\n        contentHeight: width\r\n    };\r\n}\r\n\r\nexport function setControllerHeight(width) {\r\n    return {\r\n        type: \"SETCONTROLLERHEIGHT\",\r\n        controllerHeight: width\r\n    };\r\n}","import React from \"react\";\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport MainContainer from \"./MainContainer/MainContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleSideDrawer} from \"../actions/sideDrawerAction\";\r\nimport \"../css/App.css\"\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            width: 100,\r\n            height: 100\r\n        }\r\n    }\r\n\r\n    updateDimensions() {\r\n        this.setState({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener('resize', this.updateDimensions.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    render() {\r\n        let sideDrawerDivClassName;\r\n        let mainContainerDivClassName;\r\n        if(this.props.sideDrawerReducer.showSideDrawer){\r\n            sideDrawerDivClassName = \"sideDrawerDiv\";\r\n            mainContainerDivClassName = \"mainContainerDiv shrink\";\r\n        }else{\r\n            sideDrawerDivClassName = \"sideDrawerDiv hide\";\r\n            mainContainerDivClassName = \"mainContainerDiv\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"appContainer\" style={{width: this.state.width, height: this.state.height}}>\r\n                <div className={sideDrawerDivClassName}><SideDrawer/></div>\r\n                <div className={mainContainerDivClassName}><MainContainer/></div>\r\n            </div>\r\n            // <div className=\"a\">\r\n            //     sdfdsfsa\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        sideDrawerReducer: state.sideDrawerReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        toggleSideDrawer: () => {\r\n            dispatch(toggleSideDrawer());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const sideDrawerReducer = (state = {\r\n    showSideDrawer: true,\r\n    num: 1\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            state = {\r\n                ...state,\r\n                num: state.num + action.payload\r\n            };\r\n            break;\r\n        case \"TOGGLESIDEDRAWER\":\r\n                state = {\r\n                    ...state,\r\n                    showSideDrawer: !state.showSideDrawer\r\n                };\r\n                break;\r\n        default:\r\n            \r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerReducer;","const sideDrawerButtonReducer = (state = {\r\n    content: \"welcome\",\r\n    algorithm: \"\",\r\n    code: \"\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENT\":\r\n            state = {\r\n                ...state,\r\n                content: action.payload\r\n            };\r\n            break;\r\n        case \"SETALGORITHM\":\r\n            state = {\r\n                ...state,\r\n                algorithm: action.payload\r\n            }\r\n            break;\r\n        case \"SETCODE\":\r\n            state = {\r\n                ...state,\r\n                code: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default sideDrawerButtonReducer;","const divWidthReducer = (state = {\r\n    viewWidth: \"68%\",\r\n    codeWidth: \"30%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETVIEWWIDTH\":\r\n            state = {\r\n                ...state,\r\n                viewWidth: action.viewLength\r\n            };\r\n            break;\r\n        case \"SETCODEWIDTH\":\r\n            state = {\r\n                ...state,\r\n                codeWidth: action.codeLength\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default divWidthReducer;","const divHeightReducer = (state = {\r\n    contentHeight: \"70%\",\r\n    controllerHeight: \"28%\"\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"SETCONTENTHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                contentHeight: action.contentHeight\r\n            };\r\n            break;\r\n        case \"SETCONTROLLERHEIGHT\":\r\n            state = {\r\n                ...state,\r\n                controllerHeight: action.controllerHeight\r\n            };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default divHeightReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport sideDrawerReducer from \"./reducers/sideDrawerReducer\";\r\nimport sideDrawerButtonReducer from \"./reducers/sideDrawerButtonReducer\";\r\nimport divWidthReducer from \"./reducers/divWidthReducer\";\r\nimport divHeightReducer from \"./reducers/divHeightReducer\";\r\n\r\nexport default createStore(\r\n    combineReducers({sideDrawerReducer, sideDrawerButtonReducer, divWidthReducer, divHeightReducer}), \r\n    {}, \r\n    applyMiddleware()\r\n);","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport store from \"./store\";\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    window.document.getElementById(\"app\")\r\n);"],"sourceRoot":""}