{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/ToolBar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/BackDrop/BackDrop.js","index.js"],"names":["DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","href","SideDrawer","drawerClass","show","BackDrop","App","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backDropClickHandler","backDrop","this","style","height","marginTop","React","Component","render","window","document","getElementById"],"mappings":"0SAWeA,G,YARY,SAAAC,GAAK,OAC5B,4BAAQC,UAAU,gBAAgBC,QAASF,EAAMG,OAC7C,yBAAKF,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,2BCeRG,EAlBC,SAAAJ,GAAK,OACjB,4BAAQC,UAAU,WACd,yBAAKA,UAAU,uBACX,6BACI,kBAAC,EAAD,CAAoBE,MAAOH,EAAMK,sBAErC,yBAAKJ,UAAU,iBAAgB,uBAAGK,KAAK,KAAR,aAC/B,yBAAKL,UAAU,WACf,yBAAKA,UAAU,6BACX,4BACI,4BAAI,uBAAGK,KAAK,KAAR,aACJ,4BAAI,uBAAGA,KAAK,KAAR,eCGTC,G,MAfI,SAAAP,GACf,IAAIQ,EAAc,cAIlB,OAHGR,EAAMS,OACLD,EAAc,oBAGd,yBAAKP,UAAWO,GAChB,4BACI,4BAAI,uBAAGF,KAAK,KAAR,aACJ,4BAAI,uBAAGA,KAAK,KAAR,cCLDI,G,MAJE,SAAAV,GAAK,OAClB,yBAAKC,UAAU,WAAWC,QAASF,EAAMG,UCEvCQ,E,2MAEFC,MAAQ,CACJC,gBAAgB,G,EAGpBC,yBAA2B,WACvB,EAAKC,SAAS,SAACC,GACX,MAAO,CAACH,gBAAkBG,EAAUH,mB,EAI5CI,qBAAuB,WACnB,EAAKF,SAAS,SAACC,GACX,MAAO,CAACH,gBAAiB,M,wEAK7B,IAAIK,EAIJ,OAHGC,KAAKP,MAAMC,iBACVK,EAAW,kBAAC,EAAD,CAAUf,MAAOgB,KAAKF,wBAGjC,yBAAKG,MAAO,CAACC,OAAQ,SACjB,kBAAC,EAAD,CAAShB,mBAAoBc,KAAKL,2BAClC,kBAAC,EAAD,CAAYL,KAAMU,KAAKP,MAAMC,iBAC5BK,EACD,0BAAME,MAAO,CAACE,UAAW,SACrB,4D,GA7BFC,IAAMC,WAoCxBC,iBAAO,kBAAC,EAAD,MAAQC,OAAOC,SAASC,eAAe,U","file":"static/js/main.0b8fd58f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './DrawerToggleButton.css';\r\n\r\nconst DrawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button__line\"/>\r\n        <div className=\"toggle-button__line\"/>\r\n        <div className=\"toggle-button__line\"/>\r\n    </button>\r\n)\r\n\r\nexport default DrawerToggleButton;","import React from \"react\";\r\nimport './Toolbar.css';\r\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\";\r\n\r\nconst Toolbar = props => (\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar__navigation\">\r\n            <div>\r\n                <DrawerToggleButton click={props.drawerClickHandler}/>\r\n            </div>\r\n            <div className=\"toolbar__logo\"><a href=\"/\">THE LOGO</a></div>\r\n            <div className=\"spacer\"></div>\r\n            <div className=\"toolbar__navigation-items\">\r\n                <ul>\r\n                    <li><a href=\"/\">Products</a></li>\r\n                    <li><a href=\"/\">Users</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = props => {\r\n    let drawerClass = \"side-drawer\";\r\n    if(props.show){\r\n        drawerClass = \"side-drawer open\"\r\n    }\r\n    return (\r\n        <nav className={drawerClass}>\r\n        <ul>\r\n            <li><a href=\"/\">Products</a></li>\r\n            <li><a href=\"/\">Users</a></li>\r\n        </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport './BackDrop.css'\r\n\r\nconst BackDrop = props => (\r\n    <div className=\"backDrop\" onClick={props.click}></div>\r\n);\r\n\r\nexport default BackDrop;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Toolbar from './components/ToolBar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport BackDrop from './components/BackDrop/BackDrop'\n\nclass App extends React.Component {\n\n    state = {\n        sideDrawerOpen: false\n    };\n\n    drawerToggleClickHandler = () => {\n        this.setState((prevState) => {\n            return {sideDrawerOpen : !prevState.sideDrawerOpen}\n        });\n    };\n\n    backDropClickHandler = () => {\n        this.setState((prevState) => {\n            return {sideDrawerOpen : false}\n        })\n    }\n\n    render() {\n        let backDrop;\n        if(this.state.sideDrawerOpen){\n            backDrop = <BackDrop click={this.backDropClickHandler}/>;\n        }\n        return (\n            <div style={{height: '100%'}}>\n                <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\n                <SideDrawer show={this.state.sideDrawerOpen}/>\n                {backDrop}\n                <main style={{marginTop: '64px'}}>\n                    <p>dfhgfdfsgfnwesgdhesgdgd</p>\n                </main>\n            </div>\n        )\n    }\n}\n\nrender(<App/>, window.document.getElementById(\"app\"));"],"sourceRoot":""}